#ifdef MAXCOMPILER_VERSION_INFO
#define MAXCOMPILER_VERSION_INFO_PRESENT 1
#define MAXFILE_MAXCOMPILER_VERSION_YEAR         2014
#define MAXFILE_MAXCOMPILER_VERSION_NUM          2
#define MAXFILE_MAXCOMPILER_VERSION_POINT        0
#define MAXFILE_MAXCOMPILER_VERSION_PATCH        ""
#define MAXFILE_MAXCOMPILER_VERSION_REV          44158
#define MAXFILE_MAXCOMPILER_VERSION_RELEASE_DATE "2015-01-23"
#define MAXFILE_MAXCOMPILER_VERSION_RELEASE_MODE false
#endif

#ifdef MAXFILE_BUILD_INFO
#define MAXFILE_BUILD_INFO_PRESENT 1
#define MAXFILE_BUILD_NAME "BreastMammogramROIExtraction"
#define MAXFILE_BUILD_DIR  "/home/imilankovic/builds/23-04-15/BreastMammogramROIExtraction_GALAVA_DFE"
#define MAXFILE_BUILD_DATE  20150423
#define MAXFILE_BUILD_REV   1
#endif

#ifdef PARAM
#define PARAM_PRESENT 1
PARAM(MEC_SUPPORTED, 1)
PARAM(PCIE_SLAVE_STREAMING, 0)
PARAM(PERF_MONITOR_VERSION, 3)
PARAM(ON_CARD_MEMORY_FREQUENCY, 400)
PARAM(APP_ID, 0)
PARAM(REV_ID, 0)
PARAM(CHAIN_LENGTH, 66)
PARAM(NUM_IFPGA_LINKS, 0)
PARAM(IS_SIMULATION, 0)
PARAM(PCIE_ALIGNMENT, 16)
#endif

#ifdef STRING_PARAM
#define STRING_PARAM_PRESENT 1
STRING_PARAM(BOARD_MODEL, "MAX4412A")
#endif



#ifdef ENTITY_USAGE
#define ENTITY_USAGE_PRESENT 1
ENTITY_USAGE(MAXEvents, max_events, max4_cpld_top_level|max_events|)
ENTITY_USAGE(MAX4CPLD, cpld_io_ext_inst, max4_cpld_top_level|cpld_io_ext_inst|)
ENTITY_USAGE(PCIeBase, PCIeBase_i, PCIeBase_i|)
ENTITY_USAGE(AlteraClockGenerator, stream_clock_gen, STREAM0_clock_gen_i|)
ENTITY_USAGE(ResetControl, control_streams_rst_ctl, MAX4GalavaFabricTop_i|control_streams_rst_ctl|)
ENTITY_USAGE(MAX4PCIeSlaveInterface, MAX4PCIeSlaveInterface_i, MAX4GalavaFabricTop_i|MAX4PCIeSlaveInterface_i|)
ENTITY_USAGE(PerfMonitor, perfm, MAX4GalavaFabricTop_i|wrapper|PerformanceMonitor_i|)
ENTITY_USAGE(MappedElementAdapterForwarder, MappedElementAdapterForwarder_pcie_i, MAX4GalavaFabricTop_i|wrapper|MappedElementAdapterForwarder_pcie_i|)
ENTITY_USAGE(PCIeStreaming, dynpcie, MAX4GalavaFabricTop_i|wrapper|dynpcie|)
ENTITY_USAGE(ChecksumMappedDRP, checksum_mem_drp, MAX4GalavaFabricTop_i|wrapper|checksum_mem_drp|)
ENTITY_USAGE(SignalForwardingAdapter, SignalForwardingAdapter_i, MAX4GalavaFabricTop_i|wrapper|SignalForwardingAdapter_i|)
ENTITY_USAGE(MappedMemoriesController, MappedMemoriesController_i, MAX4GalavaFabricTop_i|wrapper|MappedMemoriesController_i|)
ENTITY_USAGE(MappedRegistersController, MappedRegistersController_i, MAX4GalavaFabricTop_i|wrapper|MappedRegistersController_i|)
ENTITY_USAGE(ResetControl, reset_controller, MAX4GalavaFabricTop_i|wrapper|inst_ln21_resetcontrol|)
ENTITY_USAGE(SanityBlock, SanityBlock_i, MAX4GalavaFabricTop_i|wrapper|SanityBlock_i|)
ENTITY_USAGE(MappedElementSwitch, MappedElementSwitch_i, MAX4GalavaFabricTop_i|wrapper|MappedElementSwitch_i|)
#endif

#ifdef MANAGED_ENTITY_USAGE
#define MANAGED_ENTITY_USAGE_PRESENT 1
MANAGED_ENTITY_USAGE(Fifo, Stream_12, MAX4GalavaFabricTop_i|wrapper|wrapper_entity|Stream_12|)
MANAGED_ENTITY_USAGE(Fifo, Stream_10, MAX4GalavaFabricTop_i|wrapper|wrapper_entity|Stream_10|)
MANAGED_ENTITY_USAGE(Fifo, Stream_8, MAX4GalavaFabricTop_i|wrapper|wrapper_entity|Stream_8|)
MANAGED_ENTITY_USAGE(StreamPullPushAdapter, Stream_14, MAX4GalavaFabricTop_i|wrapper|wrapper_entity|Stream_14|)
MANAGED_ENTITY_USAGE(DualAspectReg, Stream_6, MAX4GalavaFabricTop_i|wrapper|wrapper_entity|Stream_6|)
MANAGED_ENTITY_USAGE(DualAspectMux, Stream_1, MAX4GalavaFabricTop_i|wrapper|wrapper_entity|Stream_1|)
MANAGED_ENTITY_USAGE(PCIe_To_Host, output, MAX4GalavaFabricTop_i|wrapper|wrapper_entity|output|)
MANAGED_ENTITY_USAGE(PCIe_From_Host, image_pixel, MAX4GalavaFabricTop_i|wrapper|wrapper_entity|image_pixel|)
MANAGED_ENTITY_USAGE(Kernel, BreastMammogramROIExtractionKernel, MAX4GalavaFabricTop_i|wrapper|wrapper_entity|BreastMammogramROIExtractionKernel|)
#endif

#ifdef MANAGER_NODE
#define MANAGER_NODE_PRESENT 1
MANAGER_NODE(BreastMammogramROIExtractionKernel, Kernel)
MANAGER_NODE(image_pixel, PCIe_From_Host)
MANAGER_NODE(output, PCIe_To_Host)
MANAGER_NODE(Stream_1, DualAspectMux)
MANAGER_NODE(Stream_6, DualAspectReg)
MANAGER_NODE(Stream_14, StreamPullPushAdapter)
MANAGER_NODE(Stream_8, Fifo)
MANAGER_NODE(Stream_10, Fifo)
MANAGER_NODE(Stream_12, Fifo)
#endif

#ifdef MANAGER_NODE_IO
#define MANAGER_NODE_IO_PRESENT 1
MANAGER_NODE_IO(BreastMammogramROIExtractionKernel, image_pixel, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(BreastMammogramROIExtractionKernel, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(image_pixel, image_pixel, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(output, output, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_1, input, IN, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_1, output, OUT, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_6, input, IN, PCIE, 32, PULL)
MANAGER_NODE_IO(Stream_6, output, OUT, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_14, input, IN, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_14, output, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_8, input, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_8, output, OUT, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_10, input, IN, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_10, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_12, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_12, output, OUT, PCIE, 32, PULL)
#endif

#ifdef MANAGER_STREAM
#define MANAGER_STREAM_PRESENT 1
MANAGER_STREAM(image_pixel, image_pixel, Stream_8, input, 128)
MANAGER_STREAM(BreastMammogramROIExtractionKernel, output, Stream_12, input, 32)
MANAGER_STREAM(Stream_1, output, Stream_10, input, 32)
MANAGER_STREAM(Stream_6, output, Stream_14, input, 128)
MANAGER_STREAM(Stream_14, output, output, output, 128)
MANAGER_STREAM(Stream_8, output, Stream_1, input, 128)
MANAGER_STREAM(Stream_10, output, BreastMammogramROIExtractionKernel, image_pixel, 32)
MANAGER_STREAM(Stream_12, output, Stream_6, input, 32)
#endif

#ifdef MANAGER_NODE_STACK_TRACE
#define MANAGER_NODE_STACK_TRACE_PRESENT 1
MANAGER_NODE_STACK_TRACE(BreastMammogramROIExtractionKernel, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(image_pixel, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(output, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(Stream_1, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(Stream_6, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(Stream_14, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(Stream_8, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(Stream_10, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(Stream_12, "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
#endif


#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(BreastMammogramROIExtractionKernel, control_pipelining_depth, 2)
#endif


#ifdef KERNEL_CORE
#define KERNEL_CORE_PRESENT 1
KERNEL_CORE(BreastMammogramROIExtractionKernel)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(BreastMammogramROIExtractionKernel, BreastMammogramROIExtractionKernel)
#endif

#ifdef DEBUG_INPUT_BITS
#define DEBUG_INPUT_BITS_PRESENT 1
DEBUG_INPUT_BITS(BreastMammogramROIExtractionKernel, image_pixel, 0)
#endif

#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(BreastMammogramROIExtractionKernel, output, 0)
#endif






#ifdef STREAM_OFFSET_AUTO_LOOP_VAR
#define STREAM_OFFSET_AUTO_LOOP_VAR_PRESENT 1
STREAM_OFFSET_AUTO_LOOP_VAR(BreastMammogramROIExtractionKernel, loopLength, 3)
#endif


#ifdef PCIE_STREAM
#define PCIE_STREAM_PRESENT 1
PCIE_STREAM(image_pixel, STREAM_FROM_HOST, 0)
PCIE_STREAM(output, STREAM_TO_HOST, 0)
#endif



#ifdef PCIE_CONTROL_STREAMS
#define PCIE_CONTROL_STREAMS_PRESENT 1
PCIE_CONTROL_STREAMS(MappedElementsSwitchPCIeEA, 1)
#endif

#ifdef REG
#define REG_PRESENT 1
REG(SignalForwardingAdapter.SFA_FORWARD_EN, 0x0, 4, hwBits(32))
REG(BreastMammogramROIExtractionKernel.dbg_stall_vector, 0x4, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.io_output_force_disabled, 0x5, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(BreastMammogramROIExtractionKernel.width, 0x6, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(BreastMammogramROIExtractionKernel.height, 0xa, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(BreastMammogramROIExtractionKernel.io_image_pixel_force_disabled, 0xe, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(BreastMammogramROIExtractionKernel.threshold, 0xf, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(BreastMammogramROIExtractionKernel.black, 0x13, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(BreastMammogramROIExtractionKernel.run_cycle_count, 0x17, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(BreastMammogramROIExtractionKernel.current_run_cycle_count, 0x1d, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(BreastMammogramROIExtractionKernel.dbg_ctld_empty, 0x23, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.dbg_ctld_almost_empty, 0x24, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.dbg_ctld_done, 0x25, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.dbg_ctld_read, 0x26, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.dbg_ctld_request, 0x27, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.dbg_flush_start, 0x28, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.dbg_full_level, 0x29, 2, hwBits(12))
REG(BreastMammogramROIExtractionKernel.dbg_flush_start_level, 0x2b, 2, hwBits(12))
REG(BreastMammogramROIExtractionKernel.dbg_done_out, 0x2d, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.dbg_flushing, 0x2e, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.dbg_fill_level, 0x2f, 2, hwBits(12))
REG(BreastMammogramROIExtractionKernel.dbg_flush_level, 0x31, 2, hwBits(12))
REG(BreastMammogramROIExtractionKernel.dbg_ctld_read_pipe_dbg, 0x33, 1, hwBits(3))
REG(BreastMammogramROIExtractionKernel.dbg_out_valid, 0x34, 1, hwBits(1))
REG(BreastMammogramROIExtractionKernel.dbg_out_stall, 0x35, 1, hwBits(1))
REG(SanityBlock.clock_counters_base_clock_cclk, 0x36, 2, hwBits(11))
REG(SanityBlock.clock_counters_STREAM, 0x38, 2, hwBits(16))
REG(SanityBlock.clock_counters_clk_pcie, 0x3a, 2, hwBits(16))
REG(SanityBlock.seen_reset_reset_n, 0x3c, 1, hwBits(1))
REG(SanityBlock.seen_reset_STREAM_rst, 0x3d, 1, hwBits(1))
REG(SanityBlock.seen_reset_STREAM_rst_delay, 0x3e, 1, hwBits(1))
REG(SanityBlock.seen_reset_PCIE_rst, 0x3f, 1, hwBits(1))
REG(SanityBlock.seen_reset_PCIE_rst_delay, 0x40, 1, hwBits(1))
REG(SanityBlock.seen_toggle_crash_input, 0x41, 1, hwBits(1))
#endif

#ifdef REG_V2
#define REG_V2_PRESENT 1
REG_V2(SignalForwardingAdapter.SFA_FORWARD_EN, 0x0, 4, hwBits(32), HOST_WRITE_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_stall_vector, 0x4, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.io_output_force_disabled, 0x5, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(BreastMammogramROIExtractionKernel.width, 0x6, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.height, 0xa, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.io_image_pixel_force_disabled, 0xe, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(BreastMammogramROIExtractionKernel.threshold, 0xf, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.black, 0x13, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.run_cycle_count, 0x17, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.current_run_cycle_count, 0x1d, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_ctld_empty, 0x23, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_ctld_almost_empty, 0x24, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_ctld_done, 0x25, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_ctld_read, 0x26, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_ctld_request, 0x27, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_flush_start, 0x28, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_full_level, 0x29, 2, hwBits(12), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_flush_start_level, 0x2b, 2, hwBits(12), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_done_out, 0x2d, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_flushing, 0x2e, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_fill_level, 0x2f, 2, hwBits(12), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_flush_level, 0x31, 2, hwBits(12), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_ctld_read_pipe_dbg, 0x33, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_out_valid, 0x34, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(BreastMammogramROIExtractionKernel.dbg_out_stall, 0x35, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(SanityBlock.clock_counters_base_clock_cclk, 0x36, 2, hwBits(11), HOST_READ_ONLY, false)
REG_V2(SanityBlock.clock_counters_STREAM, 0x38, 2, hwBits(16), HOST_READ_ONLY, false)
REG_V2(SanityBlock.clock_counters_clk_pcie, 0x3a, 2, hwBits(16), HOST_READ_ONLY, false)
REG_V2(SanityBlock.seen_reset_reset_n, 0x3c, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(SanityBlock.seen_reset_STREAM_rst, 0x3d, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(SanityBlock.seen_reset_STREAM_rst_delay, 0x3e, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(SanityBlock.seen_reset_PCIE_rst, 0x3f, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(SanityBlock.seen_reset_PCIE_rst_delay, 0x40, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(SanityBlock.seen_toggle_crash_input, 0x41, 1, hwBits(1), HOST_READ_ONLY, false)
#endif


#ifdef MEM2
#define MEM2_PRESENT 1
MEM2(MappedClockControl.STREAM_CLKPRIM, 0x3e0000, hwUInt(32))
MEM2(MappedDRP.CHECKSUM, 0x3c0000, hwUInt(32))
MEM2(Monitoring.PERFMONITOR, 0x3b0000, hwUInt(32))
#endif

#ifdef MEM_DEPTH
#define MEM_DEPTH_PRESENT 1
MEM_DEPTH(MappedClockControl.STREAM_CLKPRIM, 256)
MEM_DEPTH(MappedDRP.CHECKSUM, 512)
MEM_DEPTH(Monitoring.PERFMONITOR, 512)
#endif

#ifdef CAPABILITY
#define CAPABILITY_PRESENT 1
CAPABILITY(GALAVAREV, GALAVAREVA)
CAPABILITY(GALAVARAM, DDR3_12GB)
CAPABILITY(GALAVAFPGA, 5SGXMA5N3F45C4)
#endif

#ifdef SFA_PORT
#define SFA_PORT_PRESENT 1
SFA_PORT(stream_reset, 0)
SFA_PORT(memory_interrupt, 1)
SFA_PORT(crash_packet, 2)
SFA_PORT(sysmon_reset, 3)
SFA_PORT(pcc_switch_regs, 4)
SFA_PORT(pcc_start, 5)
SFA_PORT(pcc_reset, 6)
SFA_PORT(partial_reconfig, 7)
#endif

#ifdef MEC_ELEMENTS
#define MEC_ELEMENTS_PRESENT 1
MEC_ELEMENTS(MappedRegisters, 1)
MEC_ELEMENTS(MappedMemories, 2)
MEC_ELEMENTS(SignalForwarding, 4)
MEC_ELEMENTS(PCIe, 0)
#endif

#ifdef DEFINE_DESIGN_NAME
#define DESIGN_NAME BreastMammogramROIExtraction
#endif /* DEFINE_DESIGN_NAME */

#ifndef SLIC_NO_DECLARATIONS
/**\file */
#ifndef SLIC_DECLARATIONS_BreastMammogramROIExtraction_H
#define SLIC_DECLARATIONS_BreastMammogramROIExtraction_H
#include "MaxSLiCInterface.h"
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



/*----------------------------------------------------------------------------*/
/*---------------------------- Interface default -----------------------------*/
/*----------------------------------------------------------------------------*/



/**
 * \brief Auxiliary function to evaluate expression for "BreastMammogramROIExtractionKernel.loopLength".
 */
int BreastMammogramROIExtraction_get_BreastMammogramROIExtractionKernel_loopLength( void );


/**
 * \brief Basic static function for the interface 'default'.
 * 
 * \param [in] param_black Interface Parameter "black".
 * \param [in] param_height Interface Parameter "height".
 * \param [in] param_length Interface Parameter "length".
 * \param [in] param_threshold Interface Parameter "threshold".
 * \param [in] param_width Interface Parameter "width".
 * \param [in] instream_image_pixel The stream should be of size (param_length * 4) bytes.
 * \param [out] outstream_output The stream should be of size (param_length * 4) bytes.
 */
void BreastMammogramROIExtraction(
	uint32_t param_black,
	uint32_t param_height,
	uint32_t param_length,
	uint32_t param_threshold,
	uint32_t param_width,
	const uint32_t *instream_image_pixel,
	uint32_t *outstream_output);

/**
 * \brief Basic static non-blocking function for the interface 'default'.
 * 
 * Schedule to run on an engine and return immediately.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 * 
 * 
 * \param [in] param_black Interface Parameter "black".
 * \param [in] param_height Interface Parameter "height".
 * \param [in] param_length Interface Parameter "length".
 * \param [in] param_threshold Interface Parameter "threshold".
 * \param [in] param_width Interface Parameter "width".
 * \param [in] instream_image_pixel The stream should be of size (param_length * 4) bytes.
 * \param [out] outstream_output The stream should be of size (param_length * 4) bytes.
 * \return A handle on the execution status, or NULL in case of error.
 */
max_run_t *BreastMammogramROIExtraction_nonblock(
	uint32_t param_black,
	uint32_t param_height,
	uint32_t param_length,
	uint32_t param_threshold,
	uint32_t param_width,
	const uint32_t *instream_image_pixel,
	uint32_t *outstream_output);

/**
 * \brief Advanced static interface, structure for the engine interface 'default'
 * 
 */
typedef struct { 
	uint32_t param_black; /**<  [in] Interface Parameter "black". */
	uint32_t param_height; /**<  [in] Interface Parameter "height". */
	uint32_t param_length; /**<  [in] Interface Parameter "length". */
	uint32_t param_threshold; /**<  [in] Interface Parameter "threshold". */
	uint32_t param_width; /**<  [in] Interface Parameter "width". */
	const uint32_t *instream_image_pixel; /**<  [in] The stream should be of size (param_length * 4) bytes. */
	uint32_t *outstream_output; /**<  [out] The stream should be of size (param_length * 4) bytes. */
} BreastMammogramROIExtraction_actions_t;

/**
 * \brief Advanced static function for the interface 'default'.
 * 
 * \param [in] engine The engine on which the actions will be executed.
 * \param [in,out] interface_actions Actions to be executed.
 */
void BreastMammogramROIExtraction_run(
	max_engine_t *engine,
	BreastMammogramROIExtraction_actions_t *interface_actions);

/**
 * \brief Advanced static non-blocking function for the interface 'default'.
 *
 * Schedule the actions to run on the engine and return immediately.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 *
 * 
 * \param [in] engine The engine on which the actions will be executed.
 * \param [in] interface_actions Actions to be executed.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *BreastMammogramROIExtraction_run_nonblock(
	max_engine_t *engine,
	BreastMammogramROIExtraction_actions_t *interface_actions);

/**
 * \brief Group run advanced static function for the interface 'default'.
 * 
 * \param [in] group Group to use.
 * \param [in,out] interface_actions Actions to run.
 *
 * Run the actions on the first device available in the group.
 */
void BreastMammogramROIExtraction_run_group(max_group_t *group, BreastMammogramROIExtraction_actions_t *interface_actions);

/**
 * \brief Group run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule the actions to run on the first device available in the group and return immediately.
 * The status of the run must be checked with ::max_wait. 
 * Note that use of ::max_nowait is prohibited with non-blocking running on groups:
 * see the ::max_run_group_nonblock documentation for more explanation.
 *
 * \param [in] group Group to use.
 * \param [in] interface_actions Actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *BreastMammogramROIExtraction_run_group_nonblock(max_group_t *group, BreastMammogramROIExtraction_actions_t *interface_actions);

/**
 * \brief Array run advanced static function for the interface 'default'.
 * 
 * \param [in] engarray The array of devices to use.
 * \param [in,out] interface_actions The array of actions to run.
 *
 * Run the array of actions on the array of engines.  The length of interface_actions
 * must match the size of engarray.
 */
void BreastMammogramROIExtraction_run_array(max_engarray_t *engarray, BreastMammogramROIExtraction_actions_t *interface_actions[]);

/**
 * \brief Array run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule to run the array of actions on the array of engines, and return immediately.
 * The length of interface_actions must match the size of engarray.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 *
 * \param [in] engarray The array of devices to use.
 * \param [in] interface_actions The array of actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *BreastMammogramROIExtraction_run_array_nonblock(max_engarray_t *engarray, BreastMammogramROIExtraction_actions_t *interface_actions[]);

/**
 * \brief Converts a static-interface action struct into a dynamic-interface max_actions_t struct.
 *
 * Note that this is an internal utility function used by other functions in the static interface.
 *
 * \param [in] maxfile The maxfile to use.
 * \param [in] interface_actions The interface-specific actions to run.
 * \return The dynamic-interface actions to run, or NULL in case of error.
 */
max_actions_t* BreastMammogramROIExtraction_convert(max_file_t *maxfile, BreastMammogramROIExtraction_actions_t *interface_actions);

/**
 * \brief Initialise a maxfile.
 */
max_file_t* BreastMammogramROIExtraction_init(void);

/* Error handling functions */
int BreastMammogramROIExtraction_has_errors(void);
const char* BreastMammogramROIExtraction_get_errors(void);
void BreastMammogramROIExtraction_clear_errors(void);
/* Free statically allocated maxfile data */
void BreastMammogramROIExtraction_free(void);
/* These are dummy functions for hardware builds. */
int BreastMammogramROIExtraction_simulator_start(void);
int BreastMammogramROIExtraction_simulator_stop(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* SLIC_DECLARATIONS_BreastMammogramROIExtraction_H */

#endif /* SLIC_NO_DECLARATIONS */

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 139, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.simpleCounter(Count.java:570)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:16)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 120, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000003; 3.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream$OffsetExpr.getDFEVar(Stream.java:186)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:14)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 98, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 2, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.simpleCounter(Count.java:570)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:16)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 138, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:53)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 71, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:53)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 72, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:53)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 73, NodeInputMappedReg, "Scalar input (io_output_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:53)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 74, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:53)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 75, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:53)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 116, NodeFIFO, "FIFO(17)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 15, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounterChain(Count.java:498)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:29)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 10, NodeInputMappedReg, "Scalar input (width)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:20)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 17, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:31)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 18, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:526)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:31)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 99, NodeFIFO, "FIFO(11)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 11, NodeInputMappedReg, "Scalar input (height)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:21)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 16, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:526)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:30)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 137, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x0000000a; 10.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1021)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 46, NodeDiv, "/", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1021)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 47, NodeGt, ">", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:776)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 136, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:18)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 4, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:18)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 5, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:577)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:18)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 6, NodeInputMappedReg, "Scalar input (io_image_pixel_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:18)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 7, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:18)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 8, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:18)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 9, NodeInput, "Input(image_pixel)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:18)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 104, NodeFIFO, "FIFO(3)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 118, NodeFIFO, "FIFO(3)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 13, NodeInputMappedReg, "Scalar input (threshold)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:23)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 48, NodeGte, ">=", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:730)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 49, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 94, NodeStreamOffset, "stream offset: -3072", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:269)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:49)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 135, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 51, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 12, NodeInputMappedReg, "Scalar input (black)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:22)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 34, NodeLt, "<", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:43)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 121, NodeCat, "@", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 122, NodeFIFO, "FIFO(3067)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 123, NodeSlice, "[1:1]", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 124, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 52, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 115, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 134, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x0000000a; 10.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1021)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:45)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 39, NodeDiv, "/", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1021)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:45)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 40, NodeLte, "<=", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:684)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:45)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 41, NodeGte, ">=", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:730)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:45)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 42, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:45)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 114, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 133, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:791)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:43)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 30, NodeGt, ">", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:791)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:43)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 117, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 19, NodeLt, "<", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:35)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 111, NodeFIFO, "FIFO(9)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 56, NodeGte, ">=", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:730)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 95, NodeStreamOffset, "stream offset: -3", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:269)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:27)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 57, NodeLt, "<", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 58, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 59, NodeGte, ">=", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:730)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 106, NodeFIFO, "FIFO(6)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 60, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 61, NodeLt, "<", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 108, NodeFIFO, "FIFO(5)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 62, NodeGte, ">=", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:730)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 63, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 109, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 64, NodeOr, "|", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 96, NodeStreamOffset, "stream offset: -3", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:269)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 110, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 132, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 66, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 97, NodeStreamOffset, "stream offset: -3", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:269)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 69, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:51)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 20, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:35)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 21, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:35)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 131, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:791)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:43)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 32, NodeGt, ">", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:791)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:43)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 33, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:43)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 125, NodeSlice, "[0:0]", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 126, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 35, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:43)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 130, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:41)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 23, NodeEq, "==", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:41)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 129, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:791)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:41)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 25, NodeGt, ">", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:791)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:41)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 26, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:41)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 119, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 27, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:41)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 28, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:41)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 36, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:43)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 37, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:43)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 43, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:45)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 44, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:45)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 53, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 54, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1181)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:47)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 76, NodeOutput, "Output(output)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionKernel.<init>(BreastMammogramROIExtractionKernel.maxj:53)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:19)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 81, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 128, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 78, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 79, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 80, NodeStreamOffset, "stream offset: 1", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 82, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 127, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 84, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 85, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 87, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 88, NodeEq, "==", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
PHOTON_NODE_DATA(BreastMammogramROIExtractionKernel, 86, NodeFlush, "flush on trigger", "com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:361)\ncom.bioirc.breastmammogramroiextraction.BreastMammogramROIExtractionManager.main(BreastMammogramROIExtractionManager.maxj:23)\n")
#endif

#ifdef SLIC_USE_DEFINITIONS
#include <stdio.h>
#include <math.h>
#include <pthread.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
static max_file_t *stored_maxfile = NULL;
static max_engine_t *stored_engine = NULL;
static char *stored_error = NULL;
static int stored_has_error = 0;
static pthread_once_t slic_bs_is_initialised = PTHREAD_ONCE_INIT;

static void set_error(const char *error_str)
{
	stored_has_error = 1; 
	if(stored_error == NULL) {
		stored_error = strdup(error_str);
	} else {
		char *nerr = malloc(strlen(stored_error) + strlen(error_str) + 2);
		sprintf(nerr, "%s\n%s", stored_error, error_str);
		free(stored_error);
		stored_error = nerr;
	}
}
static void set_error_and_free(char *error_str){
	set_error(error_str);
	free(error_str);
}
int BreastMammogramROIExtraction_has_errors(void)
{	return stored_has_error; }
const char* BreastMammogramROIExtraction_get_errors(void)
{	return stored_error; }
void BreastMammogramROIExtraction_clear_errors(void)
{
	free(stored_error);
	stored_error = NULL;
	stored_has_error = 0;
}
int BreastMammogramROIExtraction_simulator_start(void)
{	return 0; }

int BreastMammogramROIExtraction_simulator_stop(void)
{	return 0; }

static void BreastMammogramROIExtraction_static_init(void) 
{
	stored_maxfile = BreastMammogramROIExtraction_init();
	if (stored_maxfile == NULL || !max_ok(stored_maxfile->errors)) {
		stored_maxfile = NULL;
		if(max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) abort();
		else { set_error("Unable to load maxfile"); return; }
	}
	if(!max_ok(max_global_errors())) {
		set_error_and_free(max_errors_trace(max_global_errors()));
		return;
	}
	if(!max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR))
		max_errors_mode(stored_maxfile->errors, 0);
	time_t timeout_previous = max_load_timeout(stored_maxfile, 30);
	stored_engine = max_load(stored_maxfile, "*");
	if (!max_ok(stored_maxfile->errors)) {
		if(max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) {
			fprintf(stderr, "\nUnable to load engine: aborting now.\n\n");
			fflush(stderr);
			abort();
		} else {
			set_error_and_free(max_errors_trace(stored_maxfile->errors));
			max_file_free(stored_maxfile);
			stored_maxfile = NULL;
			return;
		} 
	} 
	max_load_timeout(stored_maxfile, timeout_previous);
}
void BreastMammogramROIExtraction_free(void)
{
	if (stored_engine != NULL) {
		max_unload(stored_engine);
		stored_engine = NULL;
	}
	if (stored_maxfile != NULL) {
		max_file_free(stored_maxfile);
		stored_maxfile = NULL;
	}
	if (stored_error != NULL) {
		free(stored_error);
		stored_error = NULL;
	}
}

static int BreastMammogramROIExtraction_get_pcie_alignment(void)
{
#ifdef BreastMammogramROIExtraction_PCIE_ALIGNMENT
	return ((BreastMammogramROIExtraction_PCIE_ALIGNMENT < 1) ? 16 : BreastMammogramROIExtraction_PCIE_ALIGNMENT);
#else
	return 16;
#endif
}

static int BreastMammogramROIExtraction_check_aligned(const void *data)
{
	uintptr_t pointer = (uintptr_t) data;
	int alignment = BreastMammogramROIExtraction_get_pcie_alignment();
	return (pointer % alignment) ? 1 : 0;
}

static void *BreastMammogramROIExtraction_malloc_aligned(const size_t size)
{
	void *ptr;
	int alignment = BreastMammogramROIExtraction_get_pcie_alignment();
	posix_memalign(&ptr, alignment, size);
	return ptr;
}



/*----------------------------------------------------------------------------*/
/*---------------------------- Interface default -----------------------------*/
/*----------------------------------------------------------------------------*/



/**
 * \brief Auxiliary function to evaluate expression for "BreastMammogramROIExtractionKernel.loopLength".
 */
int BreastMammogramROIExtraction_get_BreastMammogramROIExtractionKernel_loopLength( void )
{
	return 3;
}

#define CHECK_ERRORS_ST(ST, RET) if(!max_ok(ST->errors)) { if(max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) { fprintf(stderr, "%s\n", max_errors_trace(ST->errors)); abort(); } set_error_and_free(max_errors_trace(ST->errors)); return RET; } 
#define CHECK_NULL(VALUE, MESSAGE, RET) if(VALUE == NULL) { if (max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) { fprintf(stderr, "%s\n%s\n", (stored_error == NULL) ? "" : stored_error, MESSAGE); abort(); } set_error(MESSAGE); return RET; }

 
typedef struct BreastMammogramROIExtraction_callback_stream {
	uint8_t *user_ptr;
	uint8_t *aligned_ptr;
	size_t   size;
	int      is_output;
} BreastMammogramROIExtraction_callback_stream_t;

typedef struct BreastMammogramROIExtraction_callback_data {
	BreastMammogramROIExtraction_callback_stream_t stream[2]; 
	int count;
	int max_count;
} BreastMammogramROIExtraction_callback_data_t;

static void BreastMammogramROIExtraction_callback_internal(void *cb_data)
{
	BreastMammogramROIExtraction_callback_data_t *data = (BreastMammogramROIExtraction_callback_data_t*) cb_data;
	for (int i = 0 ; i < data->count ; i++ ) {
		BreastMammogramROIExtraction_callback_stream_t *s = &data->stream[i];
		if (s->is_output && (s->size > 0)) {
			memcpy(s->user_ptr, s->aligned_ptr, s->size);
		}
		free(s->aligned_ptr);
	}
	free(data);
}

static max_actions_t* BreastMammogramROIExtraction_convert_internal(
	max_file_t *maxfile,
	BreastMammogramROIExtraction_actions_t *interface_actions,
	int  is_internal_call,
	void (**callback_func)(void*),
	void **callback_data)
{
	max_actions_t *actions = max_actions_init(maxfile, NULL);
	if(actions == NULL) return NULL;

#define CHECK_ERRORS if(!max_ok(actions->errors)) { set_error_and_free(max_errors_trace(actions->errors)); return NULL; } 

	BreastMammogramROIExtraction_callback_data_t *cb_data = NULL;
	int use_callback = (callback_func != NULL) && (callback_data != NULL);
	if (use_callback) {
		cb_data = malloc(sizeof(BreastMammogramROIExtraction_callback_data_t));
		if (cb_data == NULL) {
			fprintf(stderr, "Unable to allocate memory for stream callback data in function BreastMammogramROIExtraction_convert_internal\n");
			return NULL;
		}
		cb_data->max_count = 2;
		cb_data->count     = 0;
		*callback_data     = cb_data;
		*callback_func     = &BreastMammogramROIExtraction_callback_internal;
	}

	int32_t param_BreastMammogramROIExtractionKernel_loopLength = BreastMammogramROIExtraction_get_BreastMammogramROIExtractionKernel_loopLength(  );
	
	uint32_t param_length = interface_actions->param_length;
	
	int32_t tmp_1 = (param_length * param_BreastMammogramROIExtractionKernel_loopLength);
	
	/* code for scalar BreastMammogramROIExtractionKernel.run_cycle_count */
	uint64_t ticks_BreastMammogramROIExtractionKernel = tmp_1;
	max_set_ticks(actions, "BreastMammogramROIExtractionKernel", tmp_1);
	CHECK_ERRORS;
	/* end of code for scalar BreastMammogramROIExtractionKernel.run_cycle_count*/
	
	uint32_t param_black = interface_actions->param_black;
	
	/* code for scalar BreastMammogramROIExtractionKernel.black */
	uint64_t inscalar_BreastMammogramROIExtractionKernel_black = param_black;
	max_set_uint64t(actions, "BreastMammogramROIExtractionKernel", "black", inscalar_BreastMammogramROIExtractionKernel_black);
	CHECK_ERRORS;
	/* end of code for scalar BreastMammogramROIExtractionKernel.black*/
	
	uint32_t param_height = interface_actions->param_height;
	
	/* code for scalar BreastMammogramROIExtractionKernel.height */
	uint64_t inscalar_BreastMammogramROIExtractionKernel_height = param_height;
	max_set_uint64t(actions, "BreastMammogramROIExtractionKernel", "height", inscalar_BreastMammogramROIExtractionKernel_height);
	CHECK_ERRORS;
	/* end of code for scalar BreastMammogramROIExtractionKernel.height*/
	
	uint32_t param_threshold = interface_actions->param_threshold;
	
	/* code for scalar BreastMammogramROIExtractionKernel.threshold */
	uint64_t inscalar_BreastMammogramROIExtractionKernel_threshold = param_threshold;
	max_set_uint64t(actions, "BreastMammogramROIExtractionKernel", "threshold", inscalar_BreastMammogramROIExtractionKernel_threshold);
	CHECK_ERRORS;
	/* end of code for scalar BreastMammogramROIExtractionKernel.threshold*/
	
	uint32_t param_width = interface_actions->param_width;
	
	/* code for scalar BreastMammogramROIExtractionKernel.width */
	uint64_t inscalar_BreastMammogramROIExtractionKernel_width = param_width;
	max_set_uint64t(actions, "BreastMammogramROIExtractionKernel", "width", inscalar_BreastMammogramROIExtractionKernel_width);
	CHECK_ERRORS;
	/* end of code for scalar BreastMammogramROIExtractionKernel.width*/
	
	int64_t tmp_0 = (param_length * 4);
	
	/* code for stream image_pixel */
	size_t instream_size_image_pixel = tmp_0;
	if (instream_size_image_pixel > 0) {
		const uint32_t *stream_ptr = interface_actions->instream_image_pixel;
		if (use_callback && (1 == BreastMammogramROIExtraction_check_aligned(interface_actions->instream_image_pixel))) {
			uint32_t *aligned_instream_image_pixel = malloc(instream_size_image_pixel);
			if (aligned_instream_image_pixel == NULL) {
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, "Failed to allocate aligned memory for stream 'image_pixel'");
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->instream_image_pixel;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_instream_image_pixel;
			(&cb_data->stream[cb_data->count])->size        = instream_size_image_pixel;
			(&cb_data->stream[cb_data->count])->is_output   = 0;
			cb_data->count += 1;
			memcpy(aligned_instream_image_pixel, interface_actions->instream_image_pixel, instream_size_image_pixel);
			stream_ptr = aligned_instream_image_pixel;
		}
		max_queue_input(actions, "image_pixel", stream_ptr, instream_size_image_pixel);
		CHECK_ERRORS;
	}
	/* end of code for stream image_pixel */
	
	/* code for stream output */
	size_t outstream_size_output = tmp_0;
	if (outstream_size_output > 0) {
		uint32_t *stream_ptr = interface_actions->outstream_output;
		if (use_callback && (1 == BreastMammogramROIExtraction_check_aligned(interface_actions->outstream_output))) {
			uint32_t *aligned_outstream_output = malloc(outstream_size_output);
			if (aligned_outstream_output == NULL) {
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, "Failed to allocate aligned memory for stream 'output'");
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->outstream_output;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_outstream_output;
			(&cb_data->stream[cb_data->count])->size        = outstream_size_output;
			(&cb_data->stream[cb_data->count])->is_output   = 1;
			cb_data->count += 1;
			stream_ptr = aligned_outstream_output;
		}
		max_queue_output(actions, "output", stream_ptr, outstream_size_output);
		CHECK_ERRORS;
	}
	/* end of code for stream output */
	
	if (use_callback && cb_data->count == 0) {
		*callback_data = NULL;
		*callback_func = NULL;
		free(cb_data);
	}
	return actions;
#undef CHECK_ERRORS
}

void BreastMammogramROIExtraction(
	uint32_t param_black,
	uint32_t param_height,
	uint32_t param_length,
	uint32_t param_threshold,
	uint32_t param_width,
	const uint32_t *instream_image_pixel,
	uint32_t *outstream_output)
{
	(void) pthread_once(&slic_bs_is_initialised, BreastMammogramROIExtraction_static_init);
	CHECK_NULL(stored_maxfile, "Maxfile was not loaded", );
	max_run_t *run = BreastMammogramROIExtraction_nonblock(param_black, param_height, param_length, param_threshold, param_width, instream_image_pixel, outstream_output);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}

max_run_t *BreastMammogramROIExtraction_nonblock(
	uint32_t param_black,
	uint32_t param_height,
	uint32_t param_length,
	uint32_t param_threshold,
	uint32_t param_width,
	const uint32_t *instream_image_pixel,
	uint32_t *outstream_output)
{
	BreastMammogramROIExtraction_actions_t interface_actions;
	interface_actions.param_black = param_black;
	interface_actions.param_height = param_height;
	interface_actions.param_length = param_length;
	interface_actions.param_threshold = param_threshold;
	interface_actions.param_width = param_width;
	interface_actions.instream_image_pixel = instream_image_pixel;
	interface_actions.outstream_output = outstream_output;
	(void) pthread_once(&slic_bs_is_initialised, BreastMammogramROIExtraction_static_init);
	CHECK_NULL(stored_maxfile, "Maxfile was not loaded", NULL);
	void (*cb_func)(void*) = NULL;
	void  *cb_data         = NULL;
	max_actions_t *actions = BreastMammogramROIExtraction_convert_internal(stored_maxfile, &interface_actions, 1, &cb_func, &cb_data);
	CHECK_NULL(actions, "Unable to build actions", NULL);
	max_validate(actions);
	CHECK_ERRORS_ST(actions, NULL);
	CHECK_ERRORS_ST(stored_engine, NULL);
	max_run_t *run;
	if (cb_func == NULL) {
		run = max_run_nonblock(stored_engine, actions);
	} else {
		run = max_run_nonblock_with_cb(stored_engine, actions, cb_func, cb_data);
	}
	CHECK_NULL(run, "Unable to run actions", NULL);
	CHECK_ERRORS_ST(actions, NULL);
	max_actions_free(actions);
	return run;
}

void BreastMammogramROIExtraction_run(
	max_engine_t *engine,
	BreastMammogramROIExtraction_actions_t *interface_actions)
{
	max_run_t *run = BreastMammogramROIExtraction_run_nonblock(engine, interface_actions);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}

max_run_t *BreastMammogramROIExtraction_run_nonblock(
	max_engine_t *engine,
	BreastMammogramROIExtraction_actions_t *interface_actions)
{
	max_file_t *maxfile = max_engine_get_max_file(engine); 
	void (*cb_func)(void*) = NULL;
	void  *cb_data         = NULL;
	max_actions_t *actions = BreastMammogramROIExtraction_convert_internal(maxfile, interface_actions, 1, &cb_func, &cb_data);
	CHECK_ERRORS_ST(actions, NULL);
	max_run_t *run;
	if (cb_func == NULL) {
		run = max_run_nonblock(engine, actions);
	} else {
		run = max_run_nonblock_with_cb(engine, actions, cb_func, cb_data);
	}
	CHECK_NULL(run, "Unable to run actions", NULL);
	max_actions_free(actions);
	return run;
}


/**
 * \brief Group run advanced static function for the interface 'default'.
 * 
 * \param [in] group Group to use.
 * \param [in,out] interface_actions Actions to run.
 *
 * Run the actions on the first device available in the group.
 */
void BreastMammogramROIExtraction_run_group(max_group_t *group, BreastMammogramROIExtraction_actions_t *interface_actions)
{
	max_run_t *run = BreastMammogramROIExtraction_run_group_nonblock(group, interface_actions);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}


/**
 * \brief Group run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule the actions to run on the first device available in the group and return immediately.
 * The status of the run must be checked with ::max_wait. 
 * Note that use of ::max_nowait is prohibited with non-blocking running on groups:
 * see the ::max_run_group_nonblock documentation for more explanation.
 *
 * \param [in] group Group to use.
 * \param [in] interface_actions Actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *BreastMammogramROIExtraction_run_group_nonblock(max_group_t *group, BreastMammogramROIExtraction_actions_t *interface_actions)
{
	max_file_t *maxfile = max_group_get_max_file(group);
	max_actions_t *actions = BreastMammogramROIExtraction_convert_internal(maxfile, interface_actions, 1, NULL, NULL);
	if(actions == NULL) return NULL;
	if(!max_ok(actions->errors)) return NULL;
	max_validate(actions);
	max_run_t *run = max_run_group_nonblock(group, actions);
	max_actions_free(actions);
	return run;
}


/**
 * \brief Array run advanced static function for the interface 'default'.
 * 
 * \param [in] engarray The array of devices to use.
 * \param [in,out] interface_actions The array of actions to run.
 *
 * Run the array of actions on the array of engines.  The length of interface_actions
 * must match the size of engarray.
 */
void BreastMammogramROIExtraction_run_array(max_engarray_t *engarray, BreastMammogramROIExtraction_actions_t *interface_actions[])
{
	max_run_t *run = BreastMammogramROIExtraction_run_array_nonblock(engarray, interface_actions);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}


/**
 * \brief Array run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule to run the array of actions on the array of engines, and return immediately.
 * The length of interface_actions must match the size of engarray.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 *
 * \param [in] engarray The array of devices to use.
 * \param [in] interface_actions The array of actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *BreastMammogramROIExtraction_run_array_nonblock(max_engarray_t *engarray, BreastMammogramROIExtraction_actions_t *interface_actions[])
{
	max_file_t *maxfile = max_engarray_get_max_file(engarray, 0);
	int i;
	max_actarray_t *actarray = max_actarray_init(maxfile, engarray->size);
	if (actarray == NULL) return NULL;
	max_actions_t **arr_actions = malloc(engarray->size * sizeof(max_actions_t*));
	for ( i = 0 ; i < actarray->size; i++ ) {
		max_actions_t *actions = BreastMammogramROIExtraction_convert_internal(maxfile, interface_actions[i], 1, NULL, NULL);
		if (actions == NULL) return NULL;
		arr_actions[i] = actions;
		max_set_action(actarray, i, actions);
	}
	max_run_t *run = max_run_array_nonblock(engarray, actarray);
	for ( i = 0 ; i < actarray->size ; i++ ) { max_actions_free(arr_actions[i]); }
	max_actarray_free(actarray);
	free(arr_actions);
	return run;
}


/**
 * \brief Converts a static-interface action struct into a dynamic-interface max_actions_t struct.
 *
 * Note that this is an internal utility function used by other functions in the static interface.
 *
 * \param [in] maxfile The maxfile to use.
 * \param [in] interface_actions The interface-specific actions to run.
 * \return The dynamic-interface actions to run, or NULL in case of error.
 */
max_actions_t* BreastMammogramROIExtraction_convert(max_file_t *maxfile, BreastMammogramROIExtraction_actions_t *interface_actions)
{
	return BreastMammogramROIExtraction_convert_internal(maxfile, interface_actions, 0, NULL, NULL);
}

#undef CHECK_ERRORS_ST
#undef CHECK_NULL



#endif /* SLIC_USE_DEFINITIONS */

#ifdef SLIC_DYNAMIC_CODE
SLIC_MODE_START(default)	
SLIC_AUTO_LOOP_OFFSET(int32_t, BreastMammogramROIExtractionKernel, loopLength, param_BreastMammogramROIExtractionKernel_loopLength)	
SLIC_PARAMETER_UINT64(uint32_t, length, param_length)	
SLIC_TEMP_VAR(int32_t tmp_1 = (param_length * param_BreastMammogramROIExtractionKernel_loopLength);)	
SLIC_SET_TICKS(BreastMammogramROIExtractionKernel, tmp_1)	
SLIC_PARAMETER_UINT64(uint32_t, black, param_black)	
SLIC_SCALAR_UINT64(BreastMammogramROIExtractionKernel, black, param_black)	
SLIC_PARAMETER_UINT64(uint32_t, height, param_height)	
SLIC_SCALAR_UINT64(BreastMammogramROIExtractionKernel, height, param_height)	
SLIC_PARAMETER_UINT64(uint32_t, threshold, param_threshold)	
SLIC_SCALAR_UINT64(BreastMammogramROIExtractionKernel, threshold, param_threshold)	
SLIC_PARAMETER_UINT64(uint32_t, width, param_width)	
SLIC_SCALAR_UINT64(BreastMammogramROIExtractionKernel, width, param_width)	
SLIC_TEMP_VAR(int64_t tmp_0 = (param_length * 4);)	
SLIC_STREAM(image_pixel, tmp_0)	
SLIC_STREAM(output, tmp_0)	
SLIC_MODE_END(default)

#endif /* SLIC_DYNAMIC_CODE */

#ifdef SKIN_META_DATA
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+PG1h
eGZpbGUgZm9ybWF0LXZlcnNpb249IjIwMTIwMjAwIiBoZWFkZXI9IkJyZWFzdE1hbW1vZ3JhbVJP
SUV4dHJhY3Rpb24uaCIgbmFtZT0iQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbiI+PGVuZ2lu
ZW1vZGUgbmFtZT0iZGVmYXVsdCI+PGZ1bmN0aW9uIG5hbWU9IkJyZWFzdE1hbW1vZ3JhbVJPSUV4
dHJhY3Rpb24iIHJldHVybi12YWx1ZT0idm9pZCI+PHNjYWxhciBkZXNjPSJJbnRlcmZhY2UgUGFy
YW1ldGVyICZxdW90O2JsYWNrJnF1b3Q7LiIgZGlyZWN0aW9uPSJJbnB1dCIgbmFtZT0icGFyYW1f
YmxhY2siIHR5cGU9InVpbnQzMl90Ii8+PHNjYWxhciBkZXNjPSJJbnRlcmZhY2UgUGFyYW1ldGVy
ICZxdW90O2hlaWdodCZxdW90Oy4iIGRpcmVjdGlvbj0iSW5wdXQiIG5hbWU9InBhcmFtX2hlaWdo
dCIgdHlwZT0idWludDMyX3QiLz48c2NhbGFyIGRlc2M9IkludGVyZmFjZSBQYXJhbWV0ZXIgJnF1
b3Q7bGVuZ3RoJnF1b3Q7LiIgZGlyZWN0aW9uPSJJbnB1dCIgbmFtZT0icGFyYW1fbGVuZ3RoIiB0
eXBlPSJ1aW50MzJfdCIvPjxzY2FsYXIgZGVzYz0iSW50ZXJmYWNlIFBhcmFtZXRlciAmcXVvdDt0
aHJlc2hvbGQmcXVvdDsuIiBkaXJlY3Rpb249IklucHV0IiBuYW1lPSJwYXJhbV90aHJlc2hvbGQi
IHR5cGU9InVpbnQzMl90Ii8+PHNjYWxhciBkZXNjPSJJbnRlcmZhY2UgUGFyYW1ldGVyICZxdW90
O3dpZHRoJnF1b3Q7LiIgZGlyZWN0aW9uPSJJbnB1dCIgbmFtZT0icGFyYW1fd2lkdGgiIHR5cGU9
InVpbnQzMl90Ii8+PGFycmF5IGRlc2M9IlRoZSBzdHJlYW0gc2hvdWxkIGJlIG9mIHNpemUgKHBh
cmFtX2xlbmd0aCAqIDQpIGJ5dGVzLiIgZGlyZWN0aW9uPSJJbnB1dCIgbmFtZT0iaW5zdHJlYW1f
aW1hZ2VfcGl4ZWwiIHNpemU9IihwYXJhbV9sZW5ndGggKiA0KSIgdHJhbnNwb3NlPSJ0cnVlIiB0
eXBlPSJ1aW50MzJfdCI+PGRpbWVuc2lvbiBpbmRleD0iMCI+PGxlbmd0aD48ZnVuY3Rpb25DYWxs
PjxudW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0iLyIgdmFsdWU9IigocGFyYW1fbGVuZ3RoICog
NCkgLyA0KSI+PGZ1bmN0aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9IioiIHZh
bHVlPSIocGFyYW1fbGVuZ3RoICogNCkiPjx1c2VyUGFyYW0gdmFsdWU9InBhcmFtX2xlbmd0aCIv
Pjxjb25zdGFudFZhbHVlIHZhbHVlPSI0Ii8+PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9u
Q2FsbD48Y29uc3RhbnRWYWx1ZSB2YWx1ZT0iNCIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5j
dGlvbkNhbGw+PC9sZW5ndGg+PC9kaW1lbnNpb24+PC9hcnJheT48YXJyYXkgZGVzYz0iVGhlIHN0
cmVhbSBzaG91bGQgYmUgb2Ygc2l6ZSAocGFyYW1fbGVuZ3RoICogNCkgYnl0ZXMuIiBkaXJlY3Rp
b249Ik91dHB1dCIgbmFtZT0ib3V0c3RyZWFtX291dHB1dCIgc2l6ZT0iKHBhcmFtX2xlbmd0aCAq
IDQpIiB0cmFuc3Bvc2U9InRydWUiIHR5cGU9InVpbnQzMl90Ij48ZGltZW5zaW9uIGluZGV4PSIw
Ij48bGVuZ3RoPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9yPSIvIiB2
YWx1ZT0iKChwYXJhbV9sZW5ndGggKiA0KSAvIDQpIj48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlP
cGVyYXRvciBvcGVyYXRvcj0iKiIgdmFsdWU9IihwYXJhbV9sZW5ndGggKiA0KSI+PHVzZXJQYXJh
bSB2YWx1ZT0icGFyYW1fbGVuZ3RoIi8+PGNvbnN0YW50VmFsdWUgdmFsdWU9IjQiLz48L251bUJp
bmFyeU9wZXJhdG9yPjwvZnVuY3Rpb25DYWxsPjxjb25zdGFudFZhbHVlIHZhbHVlPSI0Ii8+PC9u
dW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2FsbD48L2xlbmd0aD48L2RpbWVuc2lvbj48L2Fy
cmF5PjwvZnVuY3Rpb24+PC9lbmdpbmVtb2RlPjwvbWF4ZmlsZT4=
#endif /* SKIN_META_DATA */

#ifdef SLIC_B64_DEFINITIONS
I2luY2x1ZGUgPHN0ZGlvLmg+CiNpbmNsdWRlIDxtYXRoLmg+CiNpbmNsdWRlIDxwdGhyZWFkLmg+
CiNpbmNsdWRlIDxzdHJpbmcuaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgojaW5jbHVkZSA8c3RkbGli
Lmg+CnN0YXRpYyBtYXhfZmlsZV90ICpzdG9yZWRfbWF4ZmlsZSA9IE5VTEw7CnN0YXRpYyBtYXhf
ZW5naW5lX3QgKnN0b3JlZF9lbmdpbmUgPSBOVUxMOwpzdGF0aWMgY2hhciAqc3RvcmVkX2Vycm9y
ID0gTlVMTDsKc3RhdGljIGludCBzdG9yZWRfaGFzX2Vycm9yID0gMDsKc3RhdGljIHB0aHJlYWRf
b25jZV90IHNsaWNfYnNfaXNfaW5pdGlhbGlzZWQgPSBQVEhSRUFEX09OQ0VfSU5JVDsKCnN0YXRp
YyB2b2lkIHNldF9lcnJvcihjb25zdCBjaGFyICplcnJvcl9zdHIpCnsKCXN0b3JlZF9oYXNfZXJy
b3IgPSAxOyAKCWlmKHN0b3JlZF9lcnJvciA9PSBOVUxMKSB7CgkJc3RvcmVkX2Vycm9yID0gc3Ry
ZHVwKGVycm9yX3N0cik7Cgl9IGVsc2UgewoJCWNoYXIgKm5lcnIgPSBtYWxsb2Moc3RybGVuKHN0
b3JlZF9lcnJvcikgKyBzdHJsZW4oZXJyb3Jfc3RyKSArIDIpOwoJCXNwcmludGYobmVyciwgIiVz
XG4lcyIsIHN0b3JlZF9lcnJvciwgZXJyb3Jfc3RyKTsKCQlmcmVlKHN0b3JlZF9lcnJvcik7CgkJ
c3RvcmVkX2Vycm9yID0gbmVycjsKCX0KfQpzdGF0aWMgdm9pZCBzZXRfZXJyb3JfYW5kX2ZyZWUo
Y2hhciAqZXJyb3Jfc3RyKXsKCXNldF9lcnJvcihlcnJvcl9zdHIpOwoJZnJlZShlcnJvcl9zdHIp
Owp9CmludCBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2hhc19lcnJvcnModm9pZCkKewly
ZXR1cm4gc3RvcmVkX2hhc19lcnJvcjsgfQpjb25zdCBjaGFyKiBCcmVhc3RNYW1tb2dyYW1ST0lF
eHRyYWN0aW9uX2dldF9lcnJvcnModm9pZCkKewlyZXR1cm4gc3RvcmVkX2Vycm9yOyB9CnZvaWQg
QnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9jbGVhcl9lcnJvcnModm9pZCkKewoJZnJlZShz
dG9yZWRfZXJyb3IpOwoJc3RvcmVkX2Vycm9yID0gTlVMTDsKCXN0b3JlZF9oYXNfZXJyb3IgPSAw
Owp9CmludCBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX3NpbXVsYXRvcl9zdGFydCh2b2lk
KQp7CXJldHVybiAwOyB9CgppbnQgQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9zaW11bGF0
b3Jfc3RvcCh2b2lkKQp7CXJldHVybiAwOyB9CgpzdGF0aWMgdm9pZCBCcmVhc3RNYW1tb2dyYW1S
T0lFeHRyYWN0aW9uX3N0YXRpY19pbml0KHZvaWQpIAp7CglzdG9yZWRfbWF4ZmlsZSA9IEJyZWFz
dE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25faW5pdCgpOwoJaWYgKHN0b3JlZF9tYXhmaWxlID09IE5V
TEwgfHwgIW1heF9vayhzdG9yZWRfbWF4ZmlsZS0+ZXJyb3JzKSkgewoJCXN0b3JlZF9tYXhmaWxl
ID0gTlVMTDsKCQlpZihtYXhfY29uZmlnX2dldF9ib29sKE1BWF9DT05GSUdfU1RBVElDX0lOVEVS
RkFDRV9BQk9SVF9PTl9FUlJPUikpIGFib3J0KCk7CgkJZWxzZSB7IHNldF9lcnJvcigiVW5hYmxl
IHRvIGxvYWQgbWF4ZmlsZSIpOyByZXR1cm47IH0KCX0KCWlmKCFtYXhfb2sobWF4X2dsb2JhbF9l
cnJvcnMoKSkpIHsKCQlzZXRfZXJyb3JfYW5kX2ZyZWUobWF4X2Vycm9yc190cmFjZShtYXhfZ2xv
YmFsX2Vycm9ycygpKSk7CgkJcmV0dXJuOwoJfQoJaWYoIW1heF9jb25maWdfZ2V0X2Jvb2woTUFY
X0NPTkZJR19TVEFUSUNfSU5URVJGQUNFX0FCT1JUX09OX0VSUk9SKSkKCQltYXhfZXJyb3JzX21v
ZGUoc3RvcmVkX21heGZpbGUtPmVycm9ycywgMCk7Cgl0aW1lX3QgdGltZW91dF9wcmV2aW91cyA9
IG1heF9sb2FkX3RpbWVvdXQoc3RvcmVkX21heGZpbGUsIDMwKTsKCXN0b3JlZF9lbmdpbmUgPSBt
YXhfbG9hZChzdG9yZWRfbWF4ZmlsZSwgIioiKTsKCWlmICghbWF4X29rKHN0b3JlZF9tYXhmaWxl
LT5lcnJvcnMpKSB7CgkJaWYobWF4X2NvbmZpZ19nZXRfYm9vbChNQVhfQ09ORklHX1NUQVRJQ19J
TlRFUkZBQ0VfQUJPUlRfT05fRVJST1IpKSB7CgkJCWZwcmludGYoc3RkZXJyLCAiXG5VbmFibGUg
dG8gbG9hZCBlbmdpbmU6IGFib3J0aW5nIG5vdy5cblxuIik7CgkJCWZmbHVzaChzdGRlcnIpOwoJ
CQlhYm9ydCgpOwoJCX0gZWxzZSB7CgkJCXNldF9lcnJvcl9hbmRfZnJlZShtYXhfZXJyb3JzX3Ry
YWNlKHN0b3JlZF9tYXhmaWxlLT5lcnJvcnMpKTsKCQkJbWF4X2ZpbGVfZnJlZShzdG9yZWRfbWF4
ZmlsZSk7CgkJCXN0b3JlZF9tYXhmaWxlID0gTlVMTDsKCQkJcmV0dXJuOwoJCX0gCgl9IAoJbWF4
X2xvYWRfdGltZW91dChzdG9yZWRfbWF4ZmlsZSwgdGltZW91dF9wcmV2aW91cyk7Cn0Kdm9pZCBC
cmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2ZyZWUodm9pZCkKewoJaWYgKHN0b3JlZF9lbmdp
bmUgIT0gTlVMTCkgewoJCW1heF91bmxvYWQoc3RvcmVkX2VuZ2luZSk7CgkJc3RvcmVkX2VuZ2lu
ZSA9IE5VTEw7Cgl9CglpZiAoc3RvcmVkX21heGZpbGUgIT0gTlVMTCkgewoJCW1heF9maWxlX2Zy
ZWUoc3RvcmVkX21heGZpbGUpOwoJCXN0b3JlZF9tYXhmaWxlID0gTlVMTDsKCX0KCWlmIChzdG9y
ZWRfZXJyb3IgIT0gTlVMTCkgewoJCWZyZWUoc3RvcmVkX2Vycm9yKTsKCQlzdG9yZWRfZXJyb3Ig
PSBOVUxMOwoJfQp9CgpzdGF0aWMgaW50IEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fZ2V0
X3BjaWVfYWxpZ25tZW50KHZvaWQpCnsKI2lmZGVmIEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rp
b25fUENJRV9BTElHTk1FTlQKCXJldHVybiAoKEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25f
UENJRV9BTElHTk1FTlQgPCAxKSA/IDE2IDogQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9Q
Q0lFX0FMSUdOTUVOVCk7CiNlbHNlCglyZXR1cm4gMTY7CiNlbmRpZgp9CgpzdGF0aWMgaW50IEJy
ZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fY2hlY2tfYWxpZ25lZChjb25zdCB2b2lkICpkYXRh
KQp7Cgl1aW50cHRyX3QgcG9pbnRlciA9ICh1aW50cHRyX3QpIGRhdGE7CglpbnQgYWxpZ25tZW50
ID0gQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9nZXRfcGNpZV9hbGlnbm1lbnQoKTsKCXJl
dHVybiAocG9pbnRlciAlIGFsaWdubWVudCkgPyAxIDogMDsKfQoKc3RhdGljIHZvaWQgKkJyZWFz
dE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fbWFsbG9jX2FsaWduZWQoY29uc3Qgc2l6ZV90IHNpemUp
CnsKCXZvaWQgKnB0cjsKCWludCBhbGlnbm1lbnQgPSBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0
aW9uX2dldF9wY2llX2FsaWdubWVudCgpOwoJcG9zaXhfbWVtYWxpZ24oJnB0ciwgYWxpZ25tZW50
LCBzaXplKTsKCXJldHVybiBwdHI7Cn0KCgoKLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KLyotLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEludGVyZmFjZSBkZWZhdWx0IC0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tKi8KLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCgoKLyoqCiAqIFxicmll
ZiBBdXhpbGlhcnkgZnVuY3Rpb24gdG8gZXZhbHVhdGUgZXhwcmVzc2lvbiBmb3IgIkJyZWFzdE1h
bW1vZ3JhbVJPSUV4dHJhY3Rpb25LZXJuZWwubG9vcExlbmd0aCIuCiAqLwppbnQgQnJlYXN0TWFt
bW9ncmFtUk9JRXh0cmFjdGlvbl9nZXRfQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbktlcm5l
bF9sb29wTGVuZ3RoKCB2b2lkICkKewoJcmV0dXJuIDM7Cn0KCiNkZWZpbmUgQ0hFQ0tfRVJST1JT
X1NUKFNULCBSRVQpIGlmKCFtYXhfb2soU1QtPmVycm9ycykpIHsgaWYobWF4X2NvbmZpZ19nZXRf
Ym9vbChNQVhfQ09ORklHX1NUQVRJQ19JTlRFUkZBQ0VfQUJPUlRfT05fRVJST1IpKSB7IGZwcmlu
dGYoc3RkZXJyLCAiJXNcbiIsIG1heF9lcnJvcnNfdHJhY2UoU1QtPmVycm9ycykpOyBhYm9ydCgp
OyB9IHNldF9lcnJvcl9hbmRfZnJlZShtYXhfZXJyb3JzX3RyYWNlKFNULT5lcnJvcnMpKTsgcmV0
dXJuIFJFVDsgfSAKI2RlZmluZSBDSEVDS19OVUxMKFZBTFVFLCBNRVNTQUdFLCBSRVQpIGlmKFZB
TFVFID09IE5VTEwpIHsgaWYgKG1heF9jb25maWdfZ2V0X2Jvb2woTUFYX0NPTkZJR19TVEFUSUNf
SU5URVJGQUNFX0FCT1JUX09OX0VSUk9SKSkgeyBmcHJpbnRmKHN0ZGVyciwgIiVzXG4lc1xuIiwg
KHN0b3JlZF9lcnJvciA9PSBOVUxMKSA/ICIiIDogc3RvcmVkX2Vycm9yLCBNRVNTQUdFKTsgYWJv
cnQoKTsgfSBzZXRfZXJyb3IoTUVTU0FHRSk7IHJldHVybiBSRVQ7IH0KCiAKdHlwZWRlZiBzdHJ1
Y3QgQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9jYWxsYmFja19zdHJlYW0gewoJdWludDhf
dCAqdXNlcl9wdHI7Cgl1aW50OF90ICphbGlnbmVkX3B0cjsKCXNpemVfdCAgIHNpemU7CglpbnQg
ICAgICBpc19vdXRwdXQ7Cn0gQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9jYWxsYmFja19z
dHJlYW1fdDsKCnR5cGVkZWYgc3RydWN0IEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fY2Fs
bGJhY2tfZGF0YSB7CglCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2NhbGxiYWNrX3N0cmVh
bV90IHN0cmVhbVsyXTsgCglpbnQgY291bnQ7CglpbnQgbWF4X2NvdW50Owp9IEJyZWFzdE1hbW1v
Z3JhbVJPSUV4dHJhY3Rpb25fY2FsbGJhY2tfZGF0YV90OwoKc3RhdGljIHZvaWQgQnJlYXN0TWFt
bW9ncmFtUk9JRXh0cmFjdGlvbl9jYWxsYmFja19pbnRlcm5hbCh2b2lkICpjYl9kYXRhKQp7CglC
cmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2NhbGxiYWNrX2RhdGFfdCAqZGF0YSA9IChCcmVh
c3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2NhbGxiYWNrX2RhdGFfdCopIGNiX2RhdGE7Cglmb3Ig
KGludCBpID0gMCA7IGkgPCBkYXRhLT5jb3VudCA7IGkrKyApIHsKCQlCcmVhc3RNYW1tb2dyYW1S
T0lFeHRyYWN0aW9uX2NhbGxiYWNrX3N0cmVhbV90ICpzID0gJmRhdGEtPnN0cmVhbVtpXTsKCQlp
ZiAocy0+aXNfb3V0cHV0ICYmIChzLT5zaXplID4gMCkpIHsKCQkJbWVtY3B5KHMtPnVzZXJfcHRy
LCBzLT5hbGlnbmVkX3B0ciwgcy0+c2l6ZSk7CgkJfQoJCWZyZWUocy0+YWxpZ25lZF9wdHIpOwoJ
fQoJZnJlZShkYXRhKTsKfQoKc3RhdGljIG1heF9hY3Rpb25zX3QqIEJyZWFzdE1hbW1vZ3JhbVJP
SUV4dHJhY3Rpb25fY29udmVydF9pbnRlcm5hbCgKCW1heF9maWxlX3QgKm1heGZpbGUsCglCcmVh
c3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2FjdGlvbnNfdCAqaW50ZXJmYWNlX2FjdGlvbnMsCglp
bnQgIGlzX2ludGVybmFsX2NhbGwsCgl2b2lkICgqKmNhbGxiYWNrX2Z1bmMpKHZvaWQqKSwKCXZv
aWQgKipjYWxsYmFja19kYXRhKQp7CgltYXhfYWN0aW9uc190ICphY3Rpb25zID0gbWF4X2FjdGlv
bnNfaW5pdChtYXhmaWxlLCBOVUxMKTsKCWlmKGFjdGlvbnMgPT0gTlVMTCkgcmV0dXJuIE5VTEw7
CgojZGVmaW5lIENIRUNLX0VSUk9SUyBpZighbWF4X29rKGFjdGlvbnMtPmVycm9ycykpIHsgc2V0
X2Vycm9yX2FuZF9mcmVlKG1heF9lcnJvcnNfdHJhY2UoYWN0aW9ucy0+ZXJyb3JzKSk7IHJldHVy
biBOVUxMOyB9IAoKCUJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fY2FsbGJhY2tfZGF0YV90
ICpjYl9kYXRhID0gTlVMTDsKCWludCB1c2VfY2FsbGJhY2sgPSAoY2FsbGJhY2tfZnVuYyAhPSBO
VUxMKSAmJiAoY2FsbGJhY2tfZGF0YSAhPSBOVUxMKTsKCWlmICh1c2VfY2FsbGJhY2spIHsKCQlj
Yl9kYXRhID0gbWFsbG9jKHNpemVvZihCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2NhbGxi
YWNrX2RhdGFfdCkpOwoJCWlmIChjYl9kYXRhID09IE5VTEwpIHsKCQkJZnByaW50ZihzdGRlcnIs
ICJVbmFibGUgdG8gYWxsb2NhdGUgbWVtb3J5IGZvciBzdHJlYW0gY2FsbGJhY2sgZGF0YSBpbiBm
dW5jdGlvbiBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2NvbnZlcnRfaW50ZXJuYWxcbiIp
OwoJCQlyZXR1cm4gTlVMTDsKCQl9CgkJY2JfZGF0YS0+bWF4X2NvdW50ID0gMjsKCQljYl9kYXRh
LT5jb3VudCAgICAgPSAwOwoJCSpjYWxsYmFja19kYXRhICAgICA9IGNiX2RhdGE7CgkJKmNhbGxi
YWNrX2Z1bmMgICAgID0gJkJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fY2FsbGJhY2tfaW50
ZXJuYWw7Cgl9CgoJaW50MzJfdCBwYXJhbV9CcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uS2Vy
bmVsX2xvb3BMZW5ndGggPSBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2dldF9CcmVhc3RN
YW1tb2dyYW1ST0lFeHRyYWN0aW9uS2VybmVsX2xvb3BMZW5ndGgoICApOwoJCgl1aW50MzJfdCBw
YXJhbV9sZW5ndGggPSBpbnRlcmZhY2VfYWN0aW9ucy0+cGFyYW1fbGVuZ3RoOwoJCglpbnQzMl90
IHRtcF8xID0gKHBhcmFtX2xlbmd0aCAqIHBhcmFtX0JyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rp
b25LZXJuZWxfbG9vcExlbmd0aCk7CgkKCS8qIGNvZGUgZm9yIHNjYWxhciBCcmVhc3RNYW1tb2dy
YW1ST0lFeHRyYWN0aW9uS2VybmVsLnJ1bl9jeWNsZV9jb3VudCAqLwoJdWludDY0X3QgdGlja3Nf
QnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbktlcm5lbCA9IHRtcF8xOwoJbWF4X3NldF90aWNr
cyhhY3Rpb25zLCAiQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbktlcm5lbCIsIHRtcF8xKTsK
CUNIRUNLX0VSUk9SUzsKCS8qIGVuZCBvZiBjb2RlIGZvciBzY2FsYXIgQnJlYXN0TWFtbW9ncmFt
Uk9JRXh0cmFjdGlvbktlcm5lbC5ydW5fY3ljbGVfY291bnQqLwoJCgl1aW50MzJfdCBwYXJhbV9i
bGFjayA9IGludGVyZmFjZV9hY3Rpb25zLT5wYXJhbV9ibGFjazsKCQoJLyogY29kZSBmb3Igc2Nh
bGFyIEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25LZXJuZWwuYmxhY2sgKi8KCXVpbnQ2NF90
IGluc2NhbGFyX0JyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25LZXJuZWxfYmxhY2sgPSBwYXJh
bV9ibGFjazsKCW1heF9zZXRfdWludDY0dChhY3Rpb25zLCAiQnJlYXN0TWFtbW9ncmFtUk9JRXh0
cmFjdGlvbktlcm5lbCIsICJibGFjayIsIGluc2NhbGFyX0JyZWFzdE1hbW1vZ3JhbVJPSUV4dHJh
Y3Rpb25LZXJuZWxfYmxhY2spOwoJQ0hFQ0tfRVJST1JTOwoJLyogZW5kIG9mIGNvZGUgZm9yIHNj
YWxhciBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uS2VybmVsLmJsYWNrKi8KCQoJdWludDMy
X3QgcGFyYW1faGVpZ2h0ID0gaW50ZXJmYWNlX2FjdGlvbnMtPnBhcmFtX2hlaWdodDsKCQoJLyog
Y29kZSBmb3Igc2NhbGFyIEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25LZXJuZWwuaGVpZ2h0
ICovCgl1aW50NjRfdCBpbnNjYWxhcl9CcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uS2VybmVs
X2hlaWdodCA9IHBhcmFtX2hlaWdodDsKCW1heF9zZXRfdWludDY0dChhY3Rpb25zLCAiQnJlYXN0
TWFtbW9ncmFtUk9JRXh0cmFjdGlvbktlcm5lbCIsICJoZWlnaHQiLCBpbnNjYWxhcl9CcmVhc3RN
YW1tb2dyYW1ST0lFeHRyYWN0aW9uS2VybmVsX2hlaWdodCk7CglDSEVDS19FUlJPUlM7CgkvKiBl
bmQgb2YgY29kZSBmb3Igc2NhbGFyIEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25LZXJuZWwu
aGVpZ2h0Ki8KCQoJdWludDMyX3QgcGFyYW1fdGhyZXNob2xkID0gaW50ZXJmYWNlX2FjdGlvbnMt
PnBhcmFtX3RocmVzaG9sZDsKCQoJLyogY29kZSBmb3Igc2NhbGFyIEJyZWFzdE1hbW1vZ3JhbVJP
SUV4dHJhY3Rpb25LZXJuZWwudGhyZXNob2xkICovCgl1aW50NjRfdCBpbnNjYWxhcl9CcmVhc3RN
YW1tb2dyYW1ST0lFeHRyYWN0aW9uS2VybmVsX3RocmVzaG9sZCA9IHBhcmFtX3RocmVzaG9sZDsK
CW1heF9zZXRfdWludDY0dChhY3Rpb25zLCAiQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbktl
cm5lbCIsICJ0aHJlc2hvbGQiLCBpbnNjYWxhcl9CcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9u
S2VybmVsX3RocmVzaG9sZCk7CglDSEVDS19FUlJPUlM7CgkvKiBlbmQgb2YgY29kZSBmb3Igc2Nh
bGFyIEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25LZXJuZWwudGhyZXNob2xkKi8KCQoJdWlu
dDMyX3QgcGFyYW1fd2lkdGggPSBpbnRlcmZhY2VfYWN0aW9ucy0+cGFyYW1fd2lkdGg7CgkKCS8q
IGNvZGUgZm9yIHNjYWxhciBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uS2VybmVsLndpZHRo
ICovCgl1aW50NjRfdCBpbnNjYWxhcl9CcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uS2VybmVs
X3dpZHRoID0gcGFyYW1fd2lkdGg7CgltYXhfc2V0X3VpbnQ2NHQoYWN0aW9ucywgIkJyZWFzdE1h
bW1vZ3JhbVJPSUV4dHJhY3Rpb25LZXJuZWwiLCAid2lkdGgiLCBpbnNjYWxhcl9CcmVhc3RNYW1t
b2dyYW1ST0lFeHRyYWN0aW9uS2VybmVsX3dpZHRoKTsKCUNIRUNLX0VSUk9SUzsKCS8qIGVuZCBv
ZiBjb2RlIGZvciBzY2FsYXIgQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbktlcm5lbC53aWR0
aCovCgkKCWludDY0X3QgdG1wXzAgPSAocGFyYW1fbGVuZ3RoICogNCk7CgkKCS8qIGNvZGUgZm9y
IHN0cmVhbSBpbWFnZV9waXhlbCAqLwoJc2l6ZV90IGluc3RyZWFtX3NpemVfaW1hZ2VfcGl4ZWwg
PSB0bXBfMDsKCWlmIChpbnN0cmVhbV9zaXplX2ltYWdlX3BpeGVsID4gMCkgewoJCWNvbnN0IHVp
bnQzMl90ICpzdHJlYW1fcHRyID0gaW50ZXJmYWNlX2FjdGlvbnMtPmluc3RyZWFtX2ltYWdlX3Bp
eGVsOwoJCWlmICh1c2VfY2FsbGJhY2sgJiYgKDEgPT0gQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFj
dGlvbl9jaGVja19hbGlnbmVkKGludGVyZmFjZV9hY3Rpb25zLT5pbnN0cmVhbV9pbWFnZV9waXhl
bCkpKSB7CgkJCXVpbnQzMl90ICphbGlnbmVkX2luc3RyZWFtX2ltYWdlX3BpeGVsID0gbWFsbG9j
KGluc3RyZWFtX3NpemVfaW1hZ2VfcGl4ZWwpOwoJCQlpZiAoYWxpZ25lZF9pbnN0cmVhbV9pbWFn
ZV9waXhlbCA9PSBOVUxMKSB7CgkJCQltYXhfcmVwb3J0X2Vycm9yX3NsaWMoYWN0aW9ucy0+ZXJy
b3JzLCBfX0ZJTEVfXywgX19MSU5FX18sIDUyNiwgIkZhaWxlZCB0byBhbGxvY2F0ZSBhbGlnbmVk
IG1lbW9yeSBmb3Igc3RyZWFtICdpbWFnZV9waXhlbCciKTsKCQkJCUNIRUNLX0VSUk9SUzsKCQkJ
fQoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT51c2VyX3B0ciAgICA9ICh1
aW50OF90KikgaW50ZXJmYWNlX2FjdGlvbnMtPmluc3RyZWFtX2ltYWdlX3BpeGVsOwoJCQkoJmNi
X2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT5hbGlnbmVkX3B0ciA9ICh1aW50OF90Kikg
YWxpZ25lZF9pbnN0cmVhbV9pbWFnZV9waXhlbDsKCQkJKCZjYl9kYXRhLT5zdHJlYW1bY2JfZGF0
YS0+Y291bnRdKS0+c2l6ZSAgICAgICAgPSBpbnN0cmVhbV9zaXplX2ltYWdlX3BpeGVsOwoJCQko
JmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT5pc19vdXRwdXQgICA9IDA7CgkJCWNi
X2RhdGEtPmNvdW50ICs9IDE7CgkJCW1lbWNweShhbGlnbmVkX2luc3RyZWFtX2ltYWdlX3BpeGVs
LCBpbnRlcmZhY2VfYWN0aW9ucy0+aW5zdHJlYW1faW1hZ2VfcGl4ZWwsIGluc3RyZWFtX3NpemVf
aW1hZ2VfcGl4ZWwpOwoJCQlzdHJlYW1fcHRyID0gYWxpZ25lZF9pbnN0cmVhbV9pbWFnZV9waXhl
bDsKCQl9CgkJbWF4X3F1ZXVlX2lucHV0KGFjdGlvbnMsICJpbWFnZV9waXhlbCIsIHN0cmVhbV9w
dHIsIGluc3RyZWFtX3NpemVfaW1hZ2VfcGl4ZWwpOwoJCUNIRUNLX0VSUk9SUzsKCX0KCS8qIGVu
ZCBvZiBjb2RlIGZvciBzdHJlYW0gaW1hZ2VfcGl4ZWwgKi8KCQoJLyogY29kZSBmb3Igc3RyZWFt
IG91dHB1dCAqLwoJc2l6ZV90IG91dHN0cmVhbV9zaXplX291dHB1dCA9IHRtcF8wOwoJaWYgKG91
dHN0cmVhbV9zaXplX291dHB1dCA+IDApIHsKCQl1aW50MzJfdCAqc3RyZWFtX3B0ciA9IGludGVy
ZmFjZV9hY3Rpb25zLT5vdXRzdHJlYW1fb3V0cHV0OwoJCWlmICh1c2VfY2FsbGJhY2sgJiYgKDEg
PT0gQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9jaGVja19hbGlnbmVkKGludGVyZmFjZV9h
Y3Rpb25zLT5vdXRzdHJlYW1fb3V0cHV0KSkpIHsKCQkJdWludDMyX3QgKmFsaWduZWRfb3V0c3Ry
ZWFtX291dHB1dCA9IG1hbGxvYyhvdXRzdHJlYW1fc2l6ZV9vdXRwdXQpOwoJCQlpZiAoYWxpZ25l
ZF9vdXRzdHJlYW1fb3V0cHV0ID09IE5VTEwpIHsKCQkJCW1heF9yZXBvcnRfZXJyb3Jfc2xpYyhh
Y3Rpb25zLT5lcnJvcnMsIF9fRklMRV9fLCBfX0xJTkVfXywgNTI2LCAiRmFpbGVkIHRvIGFsbG9j
YXRlIGFsaWduZWQgbWVtb3J5IGZvciBzdHJlYW0gJ291dHB1dCciKTsKCQkJCUNIRUNLX0VSUk9S
UzsKCQkJfQoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT51c2VyX3B0ciAg
ICA9ICh1aW50OF90KikgaW50ZXJmYWNlX2FjdGlvbnMtPm91dHN0cmVhbV9vdXRwdXQ7CgkJCSgm
Y2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNvdW50XSktPmFsaWduZWRfcHRyID0gKHVpbnQ4X3Qq
KSBhbGlnbmVkX291dHN0cmVhbV9vdXRwdXQ7CgkJCSgmY2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEt
PmNvdW50XSktPnNpemUgICAgICAgID0gb3V0c3RyZWFtX3NpemVfb3V0cHV0OwoJCQkoJmNiX2Rh
dGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT5pc19vdXRwdXQgICA9IDE7CgkJCWNiX2RhdGEt
PmNvdW50ICs9IDE7CgkJCXN0cmVhbV9wdHIgPSBhbGlnbmVkX291dHN0cmVhbV9vdXRwdXQ7CgkJ
fQoJCW1heF9xdWV1ZV9vdXRwdXQoYWN0aW9ucywgIm91dHB1dCIsIHN0cmVhbV9wdHIsIG91dHN0
cmVhbV9zaXplX291dHB1dCk7CgkJQ0hFQ0tfRVJST1JTOwoJfQoJLyogZW5kIG9mIGNvZGUgZm9y
IHN0cmVhbSBvdXRwdXQgKi8KCQoJaWYgKHVzZV9jYWxsYmFjayAmJiBjYl9kYXRhLT5jb3VudCA9
PSAwKSB7CgkJKmNhbGxiYWNrX2RhdGEgPSBOVUxMOwoJCSpjYWxsYmFja19mdW5jID0gTlVMTDsK
CQlmcmVlKGNiX2RhdGEpOwoJfQoJcmV0dXJuIGFjdGlvbnM7CiN1bmRlZiBDSEVDS19FUlJPUlMK
fQoKdm9pZCBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uKAoJdWludDMyX3QgcGFyYW1fYmxh
Y2ssCgl1aW50MzJfdCBwYXJhbV9oZWlnaHQsCgl1aW50MzJfdCBwYXJhbV9sZW5ndGgsCgl1aW50
MzJfdCBwYXJhbV90aHJlc2hvbGQsCgl1aW50MzJfdCBwYXJhbV93aWR0aCwKCWNvbnN0IHVpbnQz
Ml90ICppbnN0cmVhbV9pbWFnZV9waXhlbCwKCXVpbnQzMl90ICpvdXRzdHJlYW1fb3V0cHV0KQp7
Cgkodm9pZCkgcHRocmVhZF9vbmNlKCZzbGljX2JzX2lzX2luaXRpYWxpc2VkLCBCcmVhc3RNYW1t
b2dyYW1ST0lFeHRyYWN0aW9uX3N0YXRpY19pbml0KTsKCUNIRUNLX05VTEwoc3RvcmVkX21heGZp
bGUsICJNYXhmaWxlIHdhcyBub3QgbG9hZGVkIiwgKTsKCW1heF9ydW5fdCAqcnVuID0gQnJlYXN0
TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9ub25ibG9jayhwYXJhbV9ibGFjaywgcGFyYW1faGVpZ2h0
LCBwYXJhbV9sZW5ndGgsIHBhcmFtX3RocmVzaG9sZCwgcGFyYW1fd2lkdGgsIGluc3RyZWFtX2lt
YWdlX3BpeGVsLCBvdXRzdHJlYW1fb3V0cHV0KTsKCUNIRUNLX05VTEwocnVuLCAiVW5hYmxlIHRv
IHJ1biBhY3Rpb25zIiwgKTsKCW1heF93YWl0KHJ1bik7Cn0KCm1heF9ydW5fdCAqQnJlYXN0TWFt
bW9ncmFtUk9JRXh0cmFjdGlvbl9ub25ibG9jaygKCXVpbnQzMl90IHBhcmFtX2JsYWNrLAoJdWlu
dDMyX3QgcGFyYW1faGVpZ2h0LAoJdWludDMyX3QgcGFyYW1fbGVuZ3RoLAoJdWludDMyX3QgcGFy
YW1fdGhyZXNob2xkLAoJdWludDMyX3QgcGFyYW1fd2lkdGgsCgljb25zdCB1aW50MzJfdCAqaW5z
dHJlYW1faW1hZ2VfcGl4ZWwsCgl1aW50MzJfdCAqb3V0c3RyZWFtX291dHB1dCkKewoJQnJlYXN0
TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9hY3Rpb25zX3QgaW50ZXJmYWNlX2FjdGlvbnM7CglpbnRl
cmZhY2VfYWN0aW9ucy5wYXJhbV9ibGFjayA9IHBhcmFtX2JsYWNrOwoJaW50ZXJmYWNlX2FjdGlv
bnMucGFyYW1faGVpZ2h0ID0gcGFyYW1faGVpZ2h0OwoJaW50ZXJmYWNlX2FjdGlvbnMucGFyYW1f
bGVuZ3RoID0gcGFyYW1fbGVuZ3RoOwoJaW50ZXJmYWNlX2FjdGlvbnMucGFyYW1fdGhyZXNob2xk
ID0gcGFyYW1fdGhyZXNob2xkOwoJaW50ZXJmYWNlX2FjdGlvbnMucGFyYW1fd2lkdGggPSBwYXJh
bV93aWR0aDsKCWludGVyZmFjZV9hY3Rpb25zLmluc3RyZWFtX2ltYWdlX3BpeGVsID0gaW5zdHJl
YW1faW1hZ2VfcGl4ZWw7CglpbnRlcmZhY2VfYWN0aW9ucy5vdXRzdHJlYW1fb3V0cHV0ID0gb3V0
c3RyZWFtX291dHB1dDsKCSh2b2lkKSBwdGhyZWFkX29uY2UoJnNsaWNfYnNfaXNfaW5pdGlhbGlz
ZWQsIEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fc3RhdGljX2luaXQpOwoJQ0hFQ0tfTlVM
TChzdG9yZWRfbWF4ZmlsZSwgIk1heGZpbGUgd2FzIG5vdCBsb2FkZWQiLCBOVUxMKTsKCXZvaWQg
KCpjYl9mdW5jKSh2b2lkKikgPSBOVUxMOwoJdm9pZCAgKmNiX2RhdGEgICAgICAgICA9IE5VTEw7
CgltYXhfYWN0aW9uc190ICphY3Rpb25zID0gQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9j
b252ZXJ0X2ludGVybmFsKHN0b3JlZF9tYXhmaWxlLCAmaW50ZXJmYWNlX2FjdGlvbnMsIDEsICZj
Yl9mdW5jLCAmY2JfZGF0YSk7CglDSEVDS19OVUxMKGFjdGlvbnMsICJVbmFibGUgdG8gYnVpbGQg
YWN0aW9ucyIsIE5VTEwpOwoJbWF4X3ZhbGlkYXRlKGFjdGlvbnMpOwoJQ0hFQ0tfRVJST1JTX1NU
KGFjdGlvbnMsIE5VTEwpOwoJQ0hFQ0tfRVJST1JTX1NUKHN0b3JlZF9lbmdpbmUsIE5VTEwpOwoJ
bWF4X3J1bl90ICpydW47CglpZiAoY2JfZnVuYyA9PSBOVUxMKSB7CgkJcnVuID0gbWF4X3J1bl9u
b25ibG9jayhzdG9yZWRfZW5naW5lLCBhY3Rpb25zKTsKCX0gZWxzZSB7CgkJcnVuID0gbWF4X3J1
bl9ub25ibG9ja193aXRoX2NiKHN0b3JlZF9lbmdpbmUsIGFjdGlvbnMsIGNiX2Z1bmMsIGNiX2Rh
dGEpOwoJfQoJQ0hFQ0tfTlVMTChydW4sICJVbmFibGUgdG8gcnVuIGFjdGlvbnMiLCBOVUxMKTsK
CUNIRUNLX0VSUk9SU19TVChhY3Rpb25zLCBOVUxMKTsKCW1heF9hY3Rpb25zX2ZyZWUoYWN0aW9u
cyk7CglyZXR1cm4gcnVuOwp9Cgp2b2lkIEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fcnVu
KAoJbWF4X2VuZ2luZV90ICplbmdpbmUsCglCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2Fj
dGlvbnNfdCAqaW50ZXJmYWNlX2FjdGlvbnMpCnsKCW1heF9ydW5fdCAqcnVuID0gQnJlYXN0TWFt
bW9ncmFtUk9JRXh0cmFjdGlvbl9ydW5fbm9uYmxvY2soZW5naW5lLCBpbnRlcmZhY2VfYWN0aW9u
cyk7CglDSEVDS19OVUxMKHJ1biwgIlVuYWJsZSB0byBydW4gYWN0aW9ucyIsICk7CgltYXhfd2Fp
dChydW4pOwp9CgptYXhfcnVuX3QgKkJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fcnVuX25v
bmJsb2NrKAoJbWF4X2VuZ2luZV90ICplbmdpbmUsCglCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0
aW9uX2FjdGlvbnNfdCAqaW50ZXJmYWNlX2FjdGlvbnMpCnsKCW1heF9maWxlX3QgKm1heGZpbGUg
PSBtYXhfZW5naW5lX2dldF9tYXhfZmlsZShlbmdpbmUpOyAKCXZvaWQgKCpjYl9mdW5jKSh2b2lk
KikgPSBOVUxMOwoJdm9pZCAgKmNiX2RhdGEgICAgICAgICA9IE5VTEw7CgltYXhfYWN0aW9uc190
ICphY3Rpb25zID0gQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9jb252ZXJ0X2ludGVybmFs
KG1heGZpbGUsIGludGVyZmFjZV9hY3Rpb25zLCAxLCAmY2JfZnVuYywgJmNiX2RhdGEpOwoJQ0hF
Q0tfRVJST1JTX1NUKGFjdGlvbnMsIE5VTEwpOwoJbWF4X3J1bl90ICpydW47CglpZiAoY2JfZnVu
YyA9PSBOVUxMKSB7CgkJcnVuID0gbWF4X3J1bl9ub25ibG9jayhlbmdpbmUsIGFjdGlvbnMpOwoJ
fSBlbHNlIHsKCQlydW4gPSBtYXhfcnVuX25vbmJsb2NrX3dpdGhfY2IoZW5naW5lLCBhY3Rpb25z
LCBjYl9mdW5jLCBjYl9kYXRhKTsKCX0KCUNIRUNLX05VTEwocnVuLCAiVW5hYmxlIHRvIHJ1biBh
Y3Rpb25zIiwgTlVMTCk7CgltYXhfYWN0aW9uc19mcmVlKGFjdGlvbnMpOwoJcmV0dXJuIHJ1bjsK
fQoKCi8qKgogKiBcYnJpZWYgR3JvdXAgcnVuIGFkdmFuY2VkIHN0YXRpYyBmdW5jdGlvbiBmb3Ig
dGhlIGludGVyZmFjZSAnZGVmYXVsdCcuCiAqIAogKiBccGFyYW0gW2luXSBncm91cCBHcm91cCB0
byB1c2UuCiAqIFxwYXJhbSBbaW4sb3V0XSBpbnRlcmZhY2VfYWN0aW9ucyBBY3Rpb25zIHRvIHJ1
bi4KICoKICogUnVuIHRoZSBhY3Rpb25zIG9uIHRoZSBmaXJzdCBkZXZpY2UgYXZhaWxhYmxlIGlu
IHRoZSBncm91cC4KICovCnZvaWQgQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9ydW5fZ3Jv
dXAobWF4X2dyb3VwX3QgKmdyb3VwLCBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2FjdGlv
bnNfdCAqaW50ZXJmYWNlX2FjdGlvbnMpCnsKCW1heF9ydW5fdCAqcnVuID0gQnJlYXN0TWFtbW9n
cmFtUk9JRXh0cmFjdGlvbl9ydW5fZ3JvdXBfbm9uYmxvY2soZ3JvdXAsIGludGVyZmFjZV9hY3Rp
b25zKTsKCUNIRUNLX05VTEwocnVuLCAiVW5hYmxlIHRvIHJ1biBhY3Rpb25zIiwgKTsKCW1heF93
YWl0KHJ1bik7Cn0KCgovKioKICogXGJyaWVmIEdyb3VwIHJ1biBhZHZhbmNlZCBzdGF0aWMgbm9u
LWJsb2NraW5nIGZ1bmN0aW9uIGZvciB0aGUgaW50ZXJmYWNlICdkZWZhdWx0Jy4KICogCiAqCiAq
IFNjaGVkdWxlIHRoZSBhY3Rpb25zIHRvIHJ1biBvbiB0aGUgZmlyc3QgZGV2aWNlIGF2YWlsYWJs
ZSBpbiB0aGUgZ3JvdXAgYW5kIHJldHVybiBpbW1lZGlhdGVseS4KICogVGhlIHN0YXR1cyBvZiB0
aGUgcnVuIG11c3QgYmUgY2hlY2tlZCB3aXRoIDo6bWF4X3dhaXQuIAogKiBOb3RlIHRoYXQgdXNl
IG9mIDo6bWF4X25vd2FpdCBpcyBwcm9oaWJpdGVkIHdpdGggbm9uLWJsb2NraW5nIHJ1bm5pbmcg
b24gZ3JvdXBzOgogKiBzZWUgdGhlIDo6bWF4X3J1bl9ncm91cF9ub25ibG9jayBkb2N1bWVudGF0
aW9uIGZvciBtb3JlIGV4cGxhbmF0aW9uLgogKgogKiBccGFyYW0gW2luXSBncm91cCBHcm91cCB0
byB1c2UuCiAqIFxwYXJhbSBbaW5dIGludGVyZmFjZV9hY3Rpb25zIEFjdGlvbnMgdG8gcnVuLgog
KiBccmV0dXJuIEEgaGFuZGxlIG9uIHRoZSBleGVjdXRpb24gc3RhdHVzIG9mIHRoZSBhY3Rpb25z
LCBvciBOVUxMIGluIGNhc2Ugb2YgZXJyb3IuCiAqLwptYXhfcnVuX3QgKkJyZWFzdE1hbW1vZ3Jh
bVJPSUV4dHJhY3Rpb25fcnVuX2dyb3VwX25vbmJsb2NrKG1heF9ncm91cF90ICpncm91cCwgQnJl
YXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9hY3Rpb25zX3QgKmludGVyZmFjZV9hY3Rpb25zKQp7
CgltYXhfZmlsZV90ICptYXhmaWxlID0gbWF4X2dyb3VwX2dldF9tYXhfZmlsZShncm91cCk7Cglt
YXhfYWN0aW9uc190ICphY3Rpb25zID0gQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9jb252
ZXJ0X2ludGVybmFsKG1heGZpbGUsIGludGVyZmFjZV9hY3Rpb25zLCAxLCBOVUxMLCBOVUxMKTsK
CWlmKGFjdGlvbnMgPT0gTlVMTCkgcmV0dXJuIE5VTEw7CglpZighbWF4X29rKGFjdGlvbnMtPmVy
cm9ycykpIHJldHVybiBOVUxMOwoJbWF4X3ZhbGlkYXRlKGFjdGlvbnMpOwoJbWF4X3J1bl90ICpy
dW4gPSBtYXhfcnVuX2dyb3VwX25vbmJsb2NrKGdyb3VwLCBhY3Rpb25zKTsKCW1heF9hY3Rpb25z
X2ZyZWUoYWN0aW9ucyk7CglyZXR1cm4gcnVuOwp9CgoKLyoqCiAqIFxicmllZiBBcnJheSBydW4g
YWR2YW5jZWQgc3RhdGljIGZ1bmN0aW9uIGZvciB0aGUgaW50ZXJmYWNlICdkZWZhdWx0Jy4KICog
CiAqIFxwYXJhbSBbaW5dIGVuZ2FycmF5IFRoZSBhcnJheSBvZiBkZXZpY2VzIHRvIHVzZS4KICog
XHBhcmFtIFtpbixvdXRdIGludGVyZmFjZV9hY3Rpb25zIFRoZSBhcnJheSBvZiBhY3Rpb25zIHRv
IHJ1bi4KICoKICogUnVuIHRoZSBhcnJheSBvZiBhY3Rpb25zIG9uIHRoZSBhcnJheSBvZiBlbmdp
bmVzLiAgVGhlIGxlbmd0aCBvZiBpbnRlcmZhY2VfYWN0aW9ucwogKiBtdXN0IG1hdGNoIHRoZSBz
aXplIG9mIGVuZ2FycmF5LgogKi8Kdm9pZCBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX3J1
bl9hcnJheShtYXhfZW5nYXJyYXlfdCAqZW5nYXJyYXksIEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJh
Y3Rpb25fYWN0aW9uc190ICppbnRlcmZhY2VfYWN0aW9uc1tdKQp7CgltYXhfcnVuX3QgKnJ1biA9
IEJyZWFzdE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fcnVuX2FycmF5X25vbmJsb2NrKGVuZ2FycmF5
LCBpbnRlcmZhY2VfYWN0aW9ucyk7CglDSEVDS19OVUxMKHJ1biwgIlVuYWJsZSB0byBydW4gYWN0
aW9ucyIsICk7CgltYXhfd2FpdChydW4pOwp9CgoKLyoqCiAqIFxicmllZiBBcnJheSBydW4gYWR2
YW5jZWQgc3RhdGljIG5vbi1ibG9ja2luZyBmdW5jdGlvbiBmb3IgdGhlIGludGVyZmFjZSAnZGVm
YXVsdCcuCiAqIAogKgogKiBTY2hlZHVsZSB0byBydW4gdGhlIGFycmF5IG9mIGFjdGlvbnMgb24g
dGhlIGFycmF5IG9mIGVuZ2luZXMsIGFuZCByZXR1cm4gaW1tZWRpYXRlbHkuCiAqIFRoZSBsZW5n
dGggb2YgaW50ZXJmYWNlX2FjdGlvbnMgbXVzdCBtYXRjaCB0aGUgc2l6ZSBvZiBlbmdhcnJheS4K
ICogVGhlIHN0YXR1cyBvZiB0aGUgcnVuIGNhbiBiZSBjaGVja2VkIGVpdGhlciBieSA6Om1heF93
YWl0IG9yIDo6bWF4X25vd2FpdDsKICogbm90ZSB0aGF0IG9uZSBvZiB0aGVzZSAqbXVzdCogYmUg
Y2FsbGVkLCBzbyB0aGF0IGFzc29jaWF0ZWQgbWVtb3J5IGNhbiBiZSByZWxlYXNlZC4KICoKICog
XHBhcmFtIFtpbl0gZW5nYXJyYXkgVGhlIGFycmF5IG9mIGRldmljZXMgdG8gdXNlLgogKiBccGFy
YW0gW2luXSBpbnRlcmZhY2VfYWN0aW9ucyBUaGUgYXJyYXkgb2YgYWN0aW9ucyB0byBydW4uCiAq
IFxyZXR1cm4gQSBoYW5kbGUgb24gdGhlIGV4ZWN1dGlvbiBzdGF0dXMgb2YgdGhlIGFjdGlvbnMs
IG9yIE5VTEwgaW4gY2FzZSBvZiBlcnJvci4KICovCm1heF9ydW5fdCAqQnJlYXN0TWFtbW9ncmFt
Uk9JRXh0cmFjdGlvbl9ydW5fYXJyYXlfbm9uYmxvY2sobWF4X2VuZ2FycmF5X3QgKmVuZ2FycmF5
LCBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2FjdGlvbnNfdCAqaW50ZXJmYWNlX2FjdGlv
bnNbXSkKewoJbWF4X2ZpbGVfdCAqbWF4ZmlsZSA9IG1heF9lbmdhcnJheV9nZXRfbWF4X2ZpbGUo
ZW5nYXJyYXksIDApOwoJaW50IGk7CgltYXhfYWN0YXJyYXlfdCAqYWN0YXJyYXkgPSBtYXhfYWN0
YXJyYXlfaW5pdChtYXhmaWxlLCBlbmdhcnJheS0+c2l6ZSk7CglpZiAoYWN0YXJyYXkgPT0gTlVM
TCkgcmV0dXJuIE5VTEw7CgltYXhfYWN0aW9uc190ICoqYXJyX2FjdGlvbnMgPSBtYWxsb2MoZW5n
YXJyYXktPnNpemUgKiBzaXplb2YobWF4X2FjdGlvbnNfdCopKTsKCWZvciAoIGkgPSAwIDsgaSA8
IGFjdGFycmF5LT5zaXplOyBpKysgKSB7CgkJbWF4X2FjdGlvbnNfdCAqYWN0aW9ucyA9IEJyZWFz
dE1hbW1vZ3JhbVJPSUV4dHJhY3Rpb25fY29udmVydF9pbnRlcm5hbChtYXhmaWxlLCBpbnRlcmZh
Y2VfYWN0aW9uc1tpXSwgMSwgTlVMTCwgTlVMTCk7CgkJaWYgKGFjdGlvbnMgPT0gTlVMTCkgcmV0
dXJuIE5VTEw7CgkJYXJyX2FjdGlvbnNbaV0gPSBhY3Rpb25zOwoJCW1heF9zZXRfYWN0aW9uKGFj
dGFycmF5LCBpLCBhY3Rpb25zKTsKCX0KCW1heF9ydW5fdCAqcnVuID0gbWF4X3J1bl9hcnJheV9u
b25ibG9jayhlbmdhcnJheSwgYWN0YXJyYXkpOwoJZm9yICggaSA9IDAgOyBpIDwgYWN0YXJyYXkt
PnNpemUgOyBpKysgKSB7IG1heF9hY3Rpb25zX2ZyZWUoYXJyX2FjdGlvbnNbaV0pOyB9CgltYXhf
YWN0YXJyYXlfZnJlZShhY3RhcnJheSk7CglmcmVlKGFycl9hY3Rpb25zKTsKCXJldHVybiBydW47
Cn0KCgovKioKICogXGJyaWVmIENvbnZlcnRzIGEgc3RhdGljLWludGVyZmFjZSBhY3Rpb24gc3Ry
dWN0IGludG8gYSBkeW5hbWljLWludGVyZmFjZSBtYXhfYWN0aW9uc190IHN0cnVjdC4KICoKICog
Tm90ZSB0aGF0IHRoaXMgaXMgYW4gaW50ZXJuYWwgdXRpbGl0eSBmdW5jdGlvbiB1c2VkIGJ5IG90
aGVyIGZ1bmN0aW9ucyBpbiB0aGUgc3RhdGljIGludGVyZmFjZS4KICoKICogXHBhcmFtIFtpbl0g
bWF4ZmlsZSBUaGUgbWF4ZmlsZSB0byB1c2UuCiAqIFxwYXJhbSBbaW5dIGludGVyZmFjZV9hY3Rp
b25zIFRoZSBpbnRlcmZhY2Utc3BlY2lmaWMgYWN0aW9ucyB0byBydW4uCiAqIFxyZXR1cm4gVGhl
IGR5bmFtaWMtaW50ZXJmYWNlIGFjdGlvbnMgdG8gcnVuLCBvciBOVUxMIGluIGNhc2Ugb2YgZXJy
b3IuCiAqLwptYXhfYWN0aW9uc190KiBCcmVhc3RNYW1tb2dyYW1ST0lFeHRyYWN0aW9uX2NvbnZl
cnQobWF4X2ZpbGVfdCAqbWF4ZmlsZSwgQnJlYXN0TWFtbW9ncmFtUk9JRXh0cmFjdGlvbl9hY3Rp
b25zX3QgKmludGVyZmFjZV9hY3Rpb25zKQp7CglyZXR1cm4gQnJlYXN0TWFtbW9ncmFtUk9JRXh0
cmFjdGlvbl9jb252ZXJ0X2ludGVybmFsKG1heGZpbGUsIGludGVyZmFjZV9hY3Rpb25zLCAwLCBO
VUxMLCBOVUxMKTsKfQoKI3VuZGVmIENIRUNLX0VSUk9SU19TVAojdW5kZWYgQ0hFQ0tfTlVMTAoK
Cg==
#endif /* SLIC_B64_DEFINITIONS */

#ifdef SLIC_EXTRA_FILES
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+PHVz
ZXJmaWxlcyBmb3JtYXQtdmVyc2lvbj0iMjAxMjAyMDAiLz4=
#endif /* SLIC_EXTRA_FILES */

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 139, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 120, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 98, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 138, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 71, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 72, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 73, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 74, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 75, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 116, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 15, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 17, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 18, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 99, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 16, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 137, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 136, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 6, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 7, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 8, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 104, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 118, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 48, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 94, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 135, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 34, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 121, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 122, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 123, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 124, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 52, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 115, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 134, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 39, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 40, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 41, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 42, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 114, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 133, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 30, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 117, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 19, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 111, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 95, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 57, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 58, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 59, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 106, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 60, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 61, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 108, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 62, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 63, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 109, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 64, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 96, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 110, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 132, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 66, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 97, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 69, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 20, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 21, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 131, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 32, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 33, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 125, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 126, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 35, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 130, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 23, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 129, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 119, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 28, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 43, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 76, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 81, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 128, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 78, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 79, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 80, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 82, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 127, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 84, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 85, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 87, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 88, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(BreastMammogramROIExtractionKernel, 86, "SquashFactor", 0.0)
#endif

#ifdef MAXFILE_SIGNATURE
#define MAXFILE_SIGNATURE_PRESENT 1
MAXFILE_SIGNATURE("302d02142cfdc3a0e2f27d24e3495f105043db9ac65b403e0215009395d16ef6049a7645b68d4ac6dedee3adcd7819")
#endif

